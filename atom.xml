<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>姑娘请站住</title>
  <subtitle>令人愉悦的忧伤</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://lixipeng.me/"/>
  <updated>2016-06-29T06:27:31.000Z</updated>
  <id>http://lixipeng.me/</id>
  
  <author>
    <name>lisnb</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>为你感到骄傲</title>
    <link href="http://lixipeng.me/2016-06/proud/"/>
    <id>http://lixipeng.me/2016-06/proud/</id>
    <published>2016-06-29T05:43:00.000Z</published>
    <updated>2016-06-29T06:27:31.000Z</updated>
    
    <content type="html">&lt;p&gt;看了很多美剧和美国电影，演绎的当然不是我周遭的生活，有很多东西是我不曾经历过的。我印象很深的事情有一个，父母经常会会抱着他们的孩子说：I’m proud of you. 或者某些情况下，孩子受伤了，要死了，也都很在意，自己有没有让父母感觉到proud，有时他们会把这个当做他们最重要的事情来看待。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;文化差异也好，文化输出也罢，我觉得这个感觉很美好，作为子女想要让自己的父母为自己感到骄傲。尽管我身边的各种父母，都愿意四处炫耀他们的孩子怎么光宗耀祖，但我没觉得那时让他们感觉到“骄傲”，不像是他们发自内心的为自己的孩子有所成就而感到开心，反而是为自己感到骄傲，你看，这是我养出来的孩子。&lt;br&gt;中国人家庭观念的确很重，但这种家庭观念和大多数美剧或者美国电影中反复强调的宗旨“family”好像有些不同，速度与激情系列里面，Dom总是把“family”放在嘴边，他们的family是一群人发自内心的互相维护，互相帮助，哪怕没有血缘关系；而维系中国家庭的唯一纽带可能就是血缘关系，因为就算你和你的邻居再好，也不会觉得你们是一家。有些时候，我觉得中国的家庭就和当年的生产队一样，只是为了便于管理。这样说可能有些绝情，但有些时候就是这个样子的。&lt;br&gt;生产队之间总会比较一下谁活做的最多，谁的庄家长得最好，所以中国的家庭也热衷于做这件事情，比。在家庭层面上，过的比别人好可能是很多人毕生的心愿。这很难扯到对错，只是有时候，在这个层面上的追求往往就忽略了个人的情感。作为父母，盼着孩子有出息，一方面确实是希望自己的孩子能够过上好的生活，但这一切后面还是为了证明，我们家能够过得比别人好。这种事情总是有标准的，就像考试，98分就是比97分高，你家孩子每个月赚1000块就是没有我们家孩子每个月2000块屌。这让我觉得很可悲。&lt;br&gt;我相信有很多人都像我一样，有自己的目标，为什么要有这个目标先不说，但每个人都会为了自己的目标奋斗。我个人是结果导向型的，我很赞同老罗说的，有些事情过程不重要，结果重要。用2年时间画出一幅画，好看就是好看，不好看就是不好看，2年又怎么了，一辈子画出一副屎一样的画来也终究是屎，不要说自己多么努力，投入了多少精力，付出了多少心血，屎就是屎。这个很无情的，可是这个社会就是这么运作的，老师可能会因为看到你的努力多给10分，但是他很难在你卷面不及格的时候给你满分，这的确很残酷，但是给你满分了对那些真的满分的同学又是不公平的，哪怕他每天吃喝嫖赌。谁让指标只有一个呢？在学校里的评价指标就只有分数，如果努力也可以打分的话，可能你会在那一项上得满分，但可惜的是没有。&lt;br&gt;事情就是这么运作的，你没有理由要求别人理解你，看到你的努力。可是真的就是这样吗？&lt;br&gt;我觉得可以不是。别人可以看不到，但是我真的很希望我们最亲近的人能够看到。当你真的很努力的时候，虽然最后失败了，或者结果没有那么好，别人很“无情”的但不得不说很“公正”的没有让你得到那么多的时候，我真的希望有些人能够站出来支持你，最起码你的家人应该充当这个角色，这可能是在整个事情中唯一能够体现出温情的环节了。我有些觉得这是他们的职责所在。恰恰相反，你最亲近的人可能在你失败的时候苛责你，漠视你的努力，觉得你没有得到他们觉得你应该得到的，他们所谓的“关心”，“望子成龙，望女成凤”，“恨铁不成钢”，可是铁就是铁啊&lt;br&gt;好，我们说这是教育方法的问题，退一大大大步讲，父母也是为了你着想，也是希望你好，那好，还有另外一种情况：你其实没有做到，你父母也知道你没有做到，你也知道你父母知道你没有做到，你父母也知道你知道他们知道你没有做到，但是他们去和别人说你做到了。天呐，这多操蛋啊？又可悲，又可恨。可悲的是他们虚荣成那个样子，把面子看的比什么都重要，比自己的孩子都重要；可恨的是他们这么做比漠视自己孩子的努力还要严重，他们直接否定了。&lt;br&gt;我经历过这种事情，事情已经很久了但还是很难释怀。可能有人又会说我太敏感了，it’s not a big deal. 真的是吗？如果你们是不知道，随便一说，那好，笑笑就过去了，如果我知道你不是这么在乎，可能我还会纠正你一下；但你明明知道，还要这样，不就是想维护你们那点自尊心吗？你们的自尊心可以了，那我的呢？是我敏感吗？我尽了我最大的努力，争取到了我能争取到的最好的，可你们表现出的是：你现在这样让我们觉得有点说不出口，所以我只能吹嘘一点。我要多不敏感才能一笑了之呢？&lt;br&gt;我努力了，我得到多少就得到多少，可能最后的结果不好，我也不喜欢，但是我为我自己在这个过程中感到骄傲，你们可以漠视我的努力，不为我感到骄傲也行，但别觉得我丢人行么，这不是你们应该做的事情吧，我想。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;看了很多美剧和美国电影，演绎的当然不是我周遭的生活，有很多东西是我不曾经历过的。我印象很深的事情有一个，父母经常会会抱着他们的孩子说：I’m proud of you. 或者某些情况下，孩子受伤了，要死了，也都很在意，自己有没有让父母感觉到proud，有时他们会把这个当做他们最重要的事情来看待。&lt;br&gt;
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
  </entry>
  
  <entry>
    <title>一个简单的R脚本，不一定对</title>
    <link href="http://lixipeng.me/2016-03/first-r-script/"/>
    <id>http://lixipeng.me/2016-03/first-r-script/</id>
    <published>2016-03-15T10:25:48.000Z</published>
    <updated>2016-03-15T10:43:36.000Z</updated>
    
    <content type="html">&lt;p&gt;第一个R语言的脚本。&lt;br&gt;这个语言不是一个好语言，它的存在合理性是需要商榷的，然而我现在必须要用，因为看起来比较简单…&lt;br&gt;等我研究研究scikit-learn之后可能就会无情地抛弃它，非常无情。&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;figcaption&gt;&lt;span&gt;beta_lm.r&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;threshold&amp;lt;-&lt;span class=&quot;number&quot;&gt;20&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cwd&amp;lt;-&lt;span class=&quot;string&quot;&gt;&#39;~/wde/news/collect/paper/_workspace&#39;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;datafile&amp;lt;-sprintf(&lt;span class=&quot;string&quot;&gt;&#39;threshold_%d.csv&#39;&lt;/span&gt;, threshold)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;factors&amp;lt;-c()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:threshold)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    factors&amp;lt;-append(factors, sprintf(&lt;span class=&quot;string&quot;&gt;&#39;loop_%d&#39;&lt;/span&gt;, i))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;setwd(cwd)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;data&amp;lt;-read.csv(datafile)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(start &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;:threshold)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(end &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; start:threshold)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t_factors&amp;lt;-factors[start:end]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        s_formula&amp;lt;-paste(&lt;span class=&quot;string&quot;&gt;&#39;gupcnt&#39;&lt;/span&gt;, paste(t_factors, collapse=&lt;span class=&quot;string&quot;&gt;&#39;+&#39;&lt;/span&gt;), sep=&lt;span class=&quot;string&quot;&gt;&#39;~&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f_formula&amp;lt;-as.formula(s_formula)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentmodel&amp;lt;-lm(f_formula, data)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentmodelsummary&amp;lt;-summary(currentmodel)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        currentargs&amp;lt;-c(head(t_factors, n=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), tail(t_factors, n=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), currentmodelsummary$r.squared)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        print(paste(currentargs, sep=&lt;span class=&quot;string&quot;&gt;&#39;\t&#39;&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;第一个R语言的脚本。&lt;br&gt;这个语言不是一个好语言，它的存在合理性是需要商榷的，然而我现在必须要用，因为看起来比较简单…&lt;br&gt;等我研究研究scikit-learn之后可能就会无情地抛弃它，非常无情。&lt;/p&gt;
&lt;figure class=&quot;highlight r&quot;&gt;&lt;fig
    
    </summary>
    
      <category term="R" scheme="http://lixipeng.me/categories/R/"/>
    
    
      <category term="线性回归" scheme="http://lixipeng.me/tags/%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92/"/>
    
      <category term="R语言" scheme="http://lixipeng.me/tags/R%E8%AF%AD%E8%A8%80/"/>
    
  </entry>
  
  <entry>
    <title>说出来你们可能不信，strptime竟然是非线程安全的</title>
    <link href="http://lixipeng.me/2016-03/strptime-thread-not-safe/"/>
    <id>http://lixipeng.me/2016-03/strptime-thread-not-safe/</id>
    <published>2016-03-12T14:12:22.000Z</published>
    <updated>2016-03-12T15:20:12.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h3&gt;&lt;p&gt;今天在做实验的时候，用到了这样的一个函数：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;filter_updatetime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(duration)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;_filter_updatetime&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(news)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&#39;updateTime&#39;&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; news:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            updateTime = datetime.strptime(news[&lt;span class=&quot;string&quot;&gt;&#39;updateTime&#39;&lt;/span&gt;], &lt;span class=&quot;string&quot;&gt;&#39;%Y/%m/%d %X&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            now  = datetime.now()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; abs((now-updateTime).total_seconds())&amp;lt;duration&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            logging.debug(&lt;span class=&quot;string&quot;&gt;&#39;%s has no updateTime&#39;&lt;/span&gt;%news[&lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; _filter_updatetime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;是在多线程里用的，但执行的时候偶尔会遇到：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;AttributeError: &amp;apos;module&amp;apos; object has no attribute &amp;apos;_strptime&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样的错误，我一脸日了狗的表情，因为我曾多次遇到类似的这个错误，多是因为我比较粗心，忘记了&lt;code&gt;from datetime import datetime&lt;/code&gt;而是直接用了&lt;code&gt;import datetime&lt;/code&gt;，然而这次我并没有犯这种低级的错误，然后我发现这次说找不到的属性是&lt;code&gt;_strptime&lt;/code&gt;而不是&lt;code&gt;strptime&lt;/code&gt;，我心说大事不好！&lt;/p&gt;
&lt;p&gt;我一开始没有想到是线程的问题，但查的时候发现为数不多的结果里都说是在多线程的时候才会出现这个问题，就又加了多线程来查，最后发现是因为线程安全的问题。&lt;/p&gt;
&lt;h3 id=&quot;问题重现&quot;&gt;&lt;a href=&quot;#问题重现&quot; class=&quot;headerlink&quot; title=&quot;问题重现&quot;&gt;&lt;/a&gt;问题重现&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Windows&lt;/strong&gt;: Python 2.7.8 |Anaconda 2.1.0 (64-bit) | (default, Jul 2 2014, 15:12:11) [MSC v.1500 64 bit (AMD64)]&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;OS X&lt;/strong&gt;: Python 2.7.6 (default, Sep  9 2014, 15:04:36) &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;都会出现这个问题，使用下面简单的代码就可以重现：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;figcaption&gt;&lt;span&gt;issue7980.py&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; datetime &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; datetime&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; threading&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; _ &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        threading.Thread(target = datetime.strptime, args=(&lt;span class=&quot;string&quot;&gt;&#39;2016/03/12 10:59:07&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;%Y/%m/%d %X&#39;&lt;/span&gt;)).start()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    run()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;错误信息（OS X）：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Exception in thread Thread-2:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Traceback (most recent call last):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py&amp;quot;, line 810, in __bootstrap_inner&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  File &amp;quot;/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py&amp;quot;, line 763, in run&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    self.__target(*self.__args, **self.__kwargs)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;AttributeError: _strptime&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;问题出在&quot;&gt;&lt;a href=&quot;#问题出在&quot; class=&quot;headerlink&quot; title=&quot;问题出在&quot;&gt;&lt;/a&gt;问题出在&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;http://bugs.python.org/issue7980&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;issue7980&lt;/a&gt;中对这个问题是这么解释的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Thread safety: The use of strptime is thread safe, but with one important caveat.  The first use of strptime is not thread safe because the first use will import _strptime.  That import is not thread safe and may throw AttributeError or ImportError.  To avoid this issue, import _strptime explicitly before starting threads, or call strptime once before starting threads.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上strptime本身是线程安全的，但是需要注意的是，第一次用这个函数的时候不是线程安全的，因为第一次使用这个函数的时候，会import _strptime，这个导入的过程不是线程安全的，在这个过程可能会抛出异常或者导入错误。&lt;br&gt;如果想要避免这个问题，那就&lt;strong&gt;在线程启动之前，调用一次这个函数&lt;/strong&gt;，使导入过程不发生在子线程中就好&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;事情是这样的&quot;&gt;&lt;a href=&quot;#事情是这样的&quot; class=&quot;headerlink&quot; title=&quot;事情是这样的&quot;&gt;&lt;/a&gt;事情是这样的&lt;/h3&gt;&lt;p&gt;今天在做实验的时候，用到了这样的一个函数：&lt;/p&gt;
&lt;figure class=&quot;highlight pyt
    
    </summary>
    
      <category term="python" scheme="http://lixipeng.me/categories/python/"/>
    
    
      <category term="strptime" scheme="http://lixipeng.me/tags/strptime/"/>
    
      <category term="线程" scheme="http://lixipeng.me/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>std::ios::rdbuf</title>
    <link href="http://lixipeng.me/2014-12/stdiosrdbuf/"/>
    <id>http://lixipeng.me/2014-12/stdiosrdbuf/</id>
    <published>2014-12-18T10:47:00.000Z</published>
    <updated>2016-03-09T01:52:10.000Z</updated>
    
    <content type="html">&lt;p&gt;今天回食堂吃饭，在路上跟范老师讨论C++读文件的事情。&lt;br&gt;然后就提到怎么把文件内容全部读到字符串里，因为C++不像python，写起来那么简单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f=open(&amp;apos;./c++_primer.areyoukiddingme&amp;apos;,&amp;apos;rb&amp;apos;)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我现在用在stackoverflow上查到的一个snippet&lt;/p&gt;
&lt;figure class=&quot;highlight&quot;&gt;&lt;figcaption&gt;&lt;span&gt;read.cpp&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;sstream&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#include &amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void run()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::ifstream fio(&quot;./c++_primer.areyoukiddingme&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::stringstream ss;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ss &amp;lt;&amp;lt; fio.rdbuf();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::string s(ss.str());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	std::cout&amp;lt;&amp;lt; s &amp;lt;&amp;lt;std::endl;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;int main()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	return EXIT_SUCCESS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;感觉这已经是最简单的读取文件全部内容的代码了。&lt;br&gt;然后就开始讨论rdbuf到底是干嘛的。&lt;br&gt;&lt;a href=&quot;http://www.cplusplus/reference/ios/ios/rdbuf&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cplusplus&lt;/a&gt;有详细介绍。&lt;br&gt;rdbuf(std::ios::rdbuf)，来自头文件 ios 和 iostream. 是一个重载了的函数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;get(1)	streambuf *rdbuf() const;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set(2)	streambuf *rdbuf(streambuf *sb);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一种形式，用来返回指向该流当前关联的流缓冲区对象（&lt;em&gt;stream buffer&lt;/em&gt;），第二种形式用来将当前流关联到&lt;em&gt;sb&lt;/em&gt;指向的流换中去对象上，并且清空所有的错误状态。&lt;br&gt;如果&lt;em&gt;sb&lt;/em&gt;是一个空指针&lt;em&gt;null pointer&lt;/em&gt;，这个函数会自动将badbit置位，有可能触发异常。&lt;br&gt;有一些派生类（如&lt;code&gt;stringstream&lt;/code&gt;和&lt;code&gt;fstream&lt;/code&gt;）保留有它们自己的内部缓冲区对象，当构造函数被调用时，与之关联。所以在调用这个函数改变关联的缓冲区对象时不会影响到它们原来的内部的缓冲区对象：因为他们会关联到一个和它们原来的缓冲区对象不同的缓冲区对象上。（就像这个函数一样，输入输出操作其实都是基于它们关联的缓冲区对象的）。&lt;br&gt;这个函数会返回在调用之前，该流关联的缓冲区对象。&lt;br&gt;比如：&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;rdbuf.cpp&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;fstream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;cstdlib&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::streambuf *psbuf, *backup;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::ofstream filestr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	filestr.open(&lt;span class=&quot;string&quot;&gt;&quot;./c++_primer.areyoukiddingme&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	backup = &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;.rdbuf();&lt;span class=&quot;comment&quot;&gt;//备份cout原来的内部缓冲区对象，第一种形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	psbuf=filestr.rfbuf(); &lt;span class=&quot;comment&quot;&gt;//获得文件流的缓冲区对象，第一种形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;.rdbuf(psbuf); &lt;span class=&quot;comment&quot;&gt;//将cout关联到文件流的缓冲区对象，第二种形式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;comment&quot;&gt;//因为流的输入输出都是对内部缓冲区的操作，所以这里cout输出的时候实际上操作的时文件流的缓冲区对象&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;string&quot;&gt;&quot;This will be written to the file instead of the stdout&quot;&lt;/span&gt;&amp;lt;&amp;lt;&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;.rdbuf(backup);&lt;span class=&quot;comment&quot;&gt;//还原cout的内部缓冲区对象。&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	filestr.close();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	run();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; EXIT_SUCCESS;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;程序运行时，那个字符串不会出现在标准输出上，会出现在文件里。&lt;/p&gt;
&lt;p&gt;所以在第一个snippet中&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ss&amp;lt;&amp;lt;fio.rdbuf()
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就是获得fio的缓冲区对象，再把其中的内容输出到ss流中，最后通过ss.str()获得表示的字符串。&lt;br&gt;那能不能直接将ss关联到fio的内部缓冲区上呢，比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;ss.rdbuf(fio.rdbuf())
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这个会报错：&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;➜io  clang++ -o &lt;span class=&quot;built_in&quot;&gt;read&lt;/span&gt; read.cpp&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read.cpp:16:14: error: too many arguments to &lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; call, expected 0, have 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ss.rdbuf(fio.rdbuf());&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ~~~~~~~~ ^~~~~~~~~~~&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/c++/v1/sstream:884:5: note:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;string&quot;&gt;&#39;rdbuf&#39;&lt;/span&gt; declared here&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    basic_stringbuf&amp;lt;char_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;, traits_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;, allocator_&lt;span class=&quot;built_in&quot;&gt;type&lt;/span&gt;&amp;gt;* rdbuf() const;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ^&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;1 error generated.&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为ostringstream没有带参数的rdbuf重载。&lt;br&gt;“虽然std::ostringstream继承了std::basic_ios（本来应该有get/set方法），但是std::basic_ostream定义了自己的成员函数rdbuf（get only），所以覆盖了父类的(get/set)方法。”&lt;br&gt;这个是stackoverflow给出的答案，但我看了一下，basic_ostream的rdbuf也是从basic_ios继承的，但basic_ostringstream自己定义了rdbuf函数。&lt;br&gt;恩，应该是这样的。&lt;br&gt;我已经给那个答题的留言了[抠鼻]&lt;br&gt;（留言失败，要有50的reputation，我只有41个）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ios_base &amp;lt;- basic_ios &amp;lt;- basic_ostream &amp;lt;- basic_ostringstream&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至于为什么… &lt;/p&gt;
&lt;p&gt;stackoverflow上有人说是因为一般来讲，rdbuf会返回一个 &lt;code&gt;stringbuf*&lt;/code&gt; ，但ostringstream的返回的是一个 &lt;code&gt;stringbuf&lt;/code&gt;,但cplusplus给的都是返回一个&lt;code&gt;stringbuf *&lt;/code&gt;&lt;br&gt;所以也不知道为啥了。&lt;/p&gt;
&lt;p&gt;然后istringstream有带参数的rdbuf吗？&lt;br&gt;恩，也没有。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天回食堂吃饭，在路上跟范老师讨论C++读文件的事情。&lt;br&gt;然后就提到怎么把文件内容全部读到字符串里，因为C++不像python，写起来那么简单&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;f=open(&amp;apos;./c++_primer.areyoukiddingme&amp;apos;,
    
    </summary>
    
      <category term="C++" scheme="http://lixipeng.me/categories/C/"/>
    
    
      <category term="rdbuf" scheme="http://lixipeng.me/tags/rdbuf/"/>
    
      <category term="c++" scheme="http://lixipeng.me/tags/c/"/>
    
      <category term="io" scheme="http://lixipeng.me/tags/io/"/>
    
  </entry>
  
  <entry>
    <title>Git 使用简介</title>
    <link href="http://lixipeng.me/2014-11/intro-to-git/"/>
    <id>http://lixipeng.me/2014-11/intro-to-git/</id>
    <published>2014-11-25T04:45:22.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;知道Github已经很长时间了，虽然用的不多，也没有人follow我，但还是感觉Github是一个伟大的东西。&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;来到实验室的第二个报告是给组里的人讲一下git，因为组里想要用版本控制工具。原来组里也是用了版本控制工具的，但是是用的SVN。后来好像要尝试一下git，所以组长就让我做一下调研，给大家讲一下git，正好那段时间正在研究git，所以就好好的研究了一下。经过我耐心的讲解，组里最后决定了仍然使用SVN…%&amp;gt;_&amp;lt;%&lt;br&gt;第一次报告因为slides里没有图，而且内容我掌握的不是特别清楚，所以被导师骂了个半死，体内的pH都失调了，这次的报告就全是图，前前后后100多张，做图做的都吐了。最后讲的时候也还很顺利，讲了一个半小时还没讲完，期间实在憋不住了还去了趟厕所。&lt;br&gt;因为是给别人做报告，所以尽可能的研究的透彻一点，基本的原理，使用也都算说的挺清楚的，关于rebase，自己从来不敢用，所以也就没讲。&lt;/p&gt;
&lt;p&gt;Github : &lt;a href=&quot;https://github.com/lisnb/intro_to_git.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;intro to git&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;最近事情比较多，没时间写别的了，挖个坟。&lt;br&gt;主要是今天翻邮箱突然翻出来了，看了一遍，感动的留下了热泪。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;知道Github已经很长时间了，虽然用的不多，也没有人follow我，但还是感觉Github是一个伟大的东西。
    
    </summary>
    
      <category term="fullstack" scheme="http://lixipeng.me/categories/fullstack/"/>
    
    
      <category term="git" scheme="http://lixipeng.me/tags/git/"/>
    
      <category term="svn" scheme="http://lixipeng.me/tags/svn/"/>
    
  </entry>
  
  <entry>
    <title>Linux下C++性能分析</title>
    <link href="http://lixipeng.me/2014-11/cpp-performance/"/>
    <id>http://lixipeng.me/2014-11/cpp-performance/</id>
    <published>2014-11-03T06:51:21.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;另一个坑… &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;另一个坑… &lt;/p&gt;

    
    </summary>
    
      <category term="linux" scheme="http://lixipeng.me/categories/linux/"/>
    
      <category term="C++" scheme="http://lixipeng.me/categories/linux/C/"/>
    
    
      <category term="C++" scheme="http://lixipeng.me/tags/C/"/>
    
      <category term="Linux" scheme="http://lixipeng.me/tags/Linux/"/>
    
      <category term="valgrind" scheme="http://lixipeng.me/tags/valgrind/"/>
    
      <category term="callgrind" scheme="http://lixipeng.me/tags/callgrind/"/>
    
      <category term="gprof2dot" scheme="http://lixipeng.me/tags/gprof2dot/"/>
    
  </entry>
  
  <entry>
    <title>mac与windows间文件共享和账户设置</title>
    <link href="http://lixipeng.me/2014-10/mac-file-share/"/>
    <id>http://lixipeng.me/2014-10/mac-file-share/</id>
    <published>2014-10-31T12:03:01.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;##mac与windows间的文件共享设置&lt;/p&gt;
&lt;p&gt;###创建一个共享账户&lt;/p&gt;
&lt;p&gt;也可以使用你平时用的账户来进行共享，但这样可能不太安全，所以可以创建一个账户，专门用来进行文件共享，步骤如下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先在屏幕左上角处，点击，然后打开“系统偏好设置”：&lt;br&gt;&lt;img src=&quot;/img/1031/1.png&quot; alt=&quot;系统偏好设置&quot;&gt;&lt;br&gt;打开“用户和群组”，并点击左下角的🔒，输入你的密码：&lt;br&gt;&lt;img src=&quot;/img/1031/2.png&quot; alt=&quot;用户和群组&quot;&gt;&lt;br&gt;然后点击左下角的加号，添加一个用户，新账户的类型选择“仅限共享”：&lt;br&gt;&lt;img src=&quot;/img/1031/3.png&quot; alt=&quot;添加一个用户&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一定要记住密码啊擦… &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###文件共享设置&lt;/p&gt;
&lt;p&gt;然后回到系统偏好设置，进入“文件共享”选项卡，在左侧点击“文件共享”前的复选框以打开该项：&lt;br&gt;&lt;img src=&quot;/img/1031/4.png&quot; alt=&quot;文件共享&quot;&gt;&lt;br&gt;随后在右侧点击选项，勾选“使用SMB来共享文件和文件夹”和“使用AFP来共享文件和文件夹”，并在刚刚新建的用户前打钩，会提示输入密码，注意，是twining的密码，而不是你平时所用的账户的密码，点击完成：&lt;br&gt;&lt;img src=&quot;/img/1031/5.png&quot; alt=&quot;选项&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/1031/6.png&quot; alt=&quot;输入新建账户的密码&quot;&gt;&lt;br&gt;然后点击文件选项卡下方右侧“用户”下的加号，选择刚刚新建的账户：&lt;br&gt;&lt;img src=&quot;/img/1031/7.png&quot; alt=&quot;添加账户&quot;&gt;&lt;br&gt;如果你只是从mac上读东西，这些就够了，但如果你要把windows上的东西拷到mac上，还需要为这个账户添加写权限：&lt;br&gt;&lt;img src=&quot;/img/1031/8.png&quot; alt=&quot;添加写权限&quot;&gt;&lt;/p&gt;
&lt;p&gt;###windows上的操作&lt;/p&gt;
&lt;p&gt;使用&lt;code&gt;Winkey+R&lt;/code&gt;,打开运行窗口，然后输入“\\你mac的IP”：&lt;br&gt;&lt;img src=&quot;/img/1031/9.png&quot; alt=&quot;输入IP&quot;&gt;&lt;br&gt;然后就会提示输入用户名和密码了，输入你新建的用户名和密码，就能够使用了。&lt;/p&gt;
&lt;p&gt;###注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;千万不要忘记密码啊擦&lt;/li&gt;
&lt;li&gt;用完了就把文件共享关了吧… &lt;/li&gt;
&lt;li&gt;不要看什么&lt;code&gt;smb&lt;/code&gt;和&lt;code&gt;afp&lt;/code&gt;协议，更不要试图在chrome上输入这个链接，诶，简直浪费时间，直接当成ftp，在运行里像添加打印机一样就行了&lt;/li&gt;
&lt;li&gt;&lt;p&gt;从windows上复制过来的东西，拥有者应该是你新建的那个账户，权限一般是600，如果是图片，看都看不了，在命令行里用以下命令修改一下就行了:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo chown &amp;quot;你的用户名&amp;quot; &amp;quot;文件名&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;共享目录一般是你根目录下的Public文件夹，也可以通过共享面板下面左侧的“共享文件夹”下面的加号来自行添加&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;千万不要忘记密码啊擦&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;一定是莫非定律在作怪…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;##下面介绍一下如果你把这个新建的账户的密码给忘了怎么办…&lt;/p&gt;
&lt;p&gt;###首先先把密码忘记了… &lt;/p&gt;
&lt;p&gt;这个偶尔用一次，我通常在笔记本和台式机之间传东西，要么就用scp，要么就传到服务器上再弄下来，很少共享什么的… 一万年用一次，所以之前就随便建了个号，用完了就放在那了。&lt;br&gt;今天我又突然想用，突然发现密码忘了…&lt;br&gt;我就想，那我解除用这个账号做共享再删了吧，所以我就在文件共享那个选项里想把这个账号给解除了，但突然发现，解除的时候需要输入这个账户的密码…尼玛…&lt;br&gt;我就想，那我直接把这个账户给删了吧… 但我打开用户账户选项卡的时候我惊喜的发现，这个账户因为是专门用来共享的，所以没有列在里面… 尼玛… &lt;/p&gt;
&lt;p&gt;###删除这个账户&lt;/p&gt;
&lt;p&gt;我查了很久，终于在Apple的官方论坛上找到了&lt;a href=&quot;https://discussions.apple.com/message/25389161&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;答案&lt;/a&gt;。&lt;br&gt;有人说，反正安全问题可以忽略，那个账户就放在那呗，又不碍事。&lt;br&gt;但我用那个论坛上提出问题的大哥的话来回答：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这个账户在“用户账户”里找不着，只有在文件共享这才能看见，我咋能把它删了啊？主要是我现在不用它了，但它就在这，想整也整不没，搞得我好烦啊… &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;双子座大男孩还有点小强迫症呢嗯哼~(@^_^@)~&lt;/p&gt;
&lt;p&gt;首先还是打开“用户账户”面板，解锁，然后点击登录选项，点击网“网络账户服务器”后的“加入”，然后点击“打开目录实用工具”：&lt;br&gt;&lt;img src=&quot;/img/1031/10.png&quot; alt=&quot;网络账户服务器&quot;&gt;&lt;br&gt;点击左下角的🔒以解锁（&lt;strong&gt;重要，否则无法删除&lt;/strong&gt;），选择“目录编辑器”&lt;br&gt;&lt;img src=&quot;/img/1031/11.png&quot; alt=&quot;目录实用工具&quot;&gt;&lt;br&gt;在目录编辑器左侧，找到你的账户名，然后点击下面的减号，选择“删除”&lt;br&gt;&lt;img src=&quot;/img/1031/12.png&quot; alt=&quot;目录编辑器&quot;&gt;&lt;/p&gt;
&lt;p&gt;噗… &lt;/p&gt;
&lt;p&gt;###注意&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不用试图在/Users下面找到这个账户的根目录，因为这个账户就是用来文件共享的，没有创建根目录，上面的目录编辑器中你可以看到，这个账户的“NFSHomeDirectory”是“/dev/null”&lt;/li&gt;
&lt;li&gt;然后别手抖删错账户… &lt;/li&gt;
&lt;li&gt;当然最好你别把密码忘了… &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;擦，这一晚上又啥都没干…&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;噗… &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##mac与windows间的文件共享设置&lt;/p&gt;
&lt;p&gt;###创建一个共享账户&lt;/p&gt;
&lt;p&gt;也可以使用你平时用的账户来进行共享，但这样可能不太安全，所以可以创建一个账户，专门用来进行文件共享，步骤如下：&lt;br&gt;
    
    </summary>
    
      <category term="mac" scheme="http://lixipeng.me/categories/mac/"/>
    
    
      <category term="mac" scheme="http://lixipeng.me/tags/mac/"/>
    
      <category term="文件共享" scheme="http://lixipeng.me/tags/%E6%96%87%E4%BB%B6%E5%85%B1%E4%BA%AB/"/>
    
      <category term="共享账户" scheme="http://lixipeng.me/tags/%E5%85%B1%E4%BA%AB%E8%B4%A6%E6%88%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux下C++内存泄漏检测</title>
    <link href="http://lixipeng.me/2014-10/memory-leak/"/>
    <id>http://lixipeng.me/2014-10/memory-leak/</id>
    <published>2014-10-31T08:14:08.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;##内存泄漏 ！- ！内存泄露&lt;br&gt;应该是前者&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://zh.wikipedia.org/wiki/内存泄漏&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;维基百科 内存泄露 – Wikipedia, the free encyclopedia.&lt;/a&gt;中用的是“泄漏”。另外，“泄露”，多指信息，机密被不该知道的人知道了，而“泄漏”除了包含以上意思之外，还包括气体液体流出等，为什么我突然想做一个比喻：从嘴里出来的就是泄露，从菊花里出来的就是泄漏[抠鼻]。所以，当形容非抽象的东西跑出来的时候，应该用“泄漏”，也就应该是“内存泄漏”&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;##valgrind&lt;/p&gt;
&lt;p&gt;在改一个组里的组件，因为C++写的不是特别多，所以改完了不太放心，一旦跑起来不崩溃，那最担心的就是内存泄漏的问题。弄了几天，记录一下。&lt;br&gt;网上查到了挺多工具，最后用的是&lt;a href=&quot;http://valgrind.org&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;valgrind&lt;/a&gt;, 优点是不用添加什么编译选项（不像&lt;em&gt;grpof&lt;/em&gt;，需要在编译的时候使用&lt;code&gt;-pg&lt;/code&gt;，但还是建议加调试选项，即&lt;code&gt;-g&lt;/code&gt;，这样最后在看报告的时候会更清晰。关于如何在&lt;em&gt;cmake&lt;/em&gt;中使用调试选项，在&lt;a href=&quot;http://lixipeng.me/2014/06/19/gdb-coredumped/&quot;&gt;这篇&lt;/a&gt;里提到过）。&lt;/p&gt;
&lt;p&gt;###原理&lt;/p&gt;
&lt;p&gt;我挺想能了解一下原理的，但现在还没有时间，所以如果以后有机会（因为肯定还会用到），希望能够把这个补上。&lt;/p&gt;
&lt;p&gt;###使用&lt;/p&gt;
&lt;p&gt;加入你的可执行文件是&lt;code&gt;libido arg1 arg2 ...&lt;/code&gt;，那最简单的使用方法就是：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --leak-check=yes libido arg1 arg2 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;你的程序会比之前慢好多，大概有20到30倍左右，还会用好多内存。然后valgrind就会把所有的信息都输出出来。&lt;/p&gt;
&lt;p&gt;####输出到文件中&lt;/p&gt;
&lt;p&gt;如果你想把这些信息输出到文件中，以备之后分析，那可以将输出重定向，但应该注意的是，如果你只用以下命令：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --leak-check=yes libido arg1 ... &amp;gt; memleak.report.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那最后&lt;em&gt;memleak.report.1&lt;/em&gt;这个文件中只会有libido的输出，并不会有检测到的信息，因为你程序的输出是 stdout(标准输出文件，宏定义是1)，但valgrind的检测信息实际上是关于内存的错误信息，所以使用的流应该是 stderr(标准错误输出文件，宏定义是2)，上面的命令只将 1 的内容重定向到了&lt;em&gt;memleak.report.1&lt;/em&gt;中，但3没有，所以需要对3进行重定向，使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --leak-check=yes libido arg1 ... &amp;gt; memleak.report.1 2&amp;gt;1
或者
valgrind --leak-check=yes libido arg2 ... &amp;amp;&amp;gt; memleak.report.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;####使用screen命令&lt;/p&gt;
&lt;p&gt;当然这可能还有一个问题，就是因为运行时间会很长，所以你可能决定晚上的时候让它运行，你先回宿舍，并且把路由器拔走（比如我… ），那就需要使用screen命令，但使用screen命令的时候要注意，直接使用：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;screen valgrind vgargs ... libido args ... &amp;amp;&amp;gt; memleak.report.1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;是没有办法达到目的的，原因我不太清楚，你可以用&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;screen ls &amp;gt; 1.txt
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;试一下，&lt;em&gt;1.txt&lt;/em&gt;中是没有内容的。可能是因为标准输出文件更改了？所以如果要用screen的话，就要先使用screen命令打开新的窗口，然后再使用之前的命令，就可以把信息输出到文件中了，敲完命令，&lt;code&gt;Ctrl+a,d&lt;/code&gt;,detach一下，你就可以回宿舍了。&lt;/p&gt;
&lt;p&gt;####–log-file&lt;/p&gt;
&lt;p&gt;当然输出到文件这种简单的功能肯定本身就带了…&lt;br&gt;使用&lt;em&gt;–log-file&lt;/em&gt;可以指定报告文件，文件名中还可以使用变量，比如&lt;code&gt;%p&lt;/code&gt;代表当前的进程号，比如当前的进程号是 38324，那么&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;valgrind --leak-check=yes --log-file=%p.memleak.report
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;那么会得到一个&lt;em&gt;38324.memleak.report&lt;/em&gt;的文件。当然还有其他的参数，可以参考官方文档，其中&lt;code&gt;%&lt;/code&gt;可以转义，使用&lt;code&gt;%%&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;###几个参数&lt;/p&gt;
&lt;p&gt;其实我也没用几个… &lt;/p&gt;
&lt;p&gt;&lt;code&gt;--leak-check=&amp;lt;no|summary|yes|full&amp;gt; [default: summary]&lt;/code&gt;&lt;br&gt;　　当打开此选项时，检测内存泄漏，如果设置成&lt;code&gt;summary&lt;/code&gt;，那只在最后给一个结论，就是泄漏了没有，泄漏了多少；如果设置成&lt;code&gt;yes&lt;/code&gt;或者&lt;code&gt;full&lt;/code&gt;，会给出泄漏的细节&lt;/p&gt;
&lt;p&gt;&lt;code&gt;--track-origins=&amp;lt;yes|no&amp;gt; [default: no]&lt;/code&gt;&lt;br&gt;　　控制是否跟踪那些没有初始化的值，默认不跟踪… 我晕… 我还自己写脚本把那些给去掉，看来不用指定… 如果指定了，在报告中会有体现，一会说… 
　　&lt;/p&gt;
&lt;p&gt;###报告解读&lt;/p&gt;
&lt;p&gt;####LEAK SUMMARY&lt;br&gt;会列出总结&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;==45924== LEAK SUMMARY:
==45924==    definitely lost: 10 bytes in 1 blocks
==45924==    indirectly lost: 0 bytes in 0 blocks
==45924==      possibly lost: 0 bytes in 0 blocks
==45924==    still reachable: 0 bytes in 0 blocks
==45924==         suppressed: 25,264 bytes in 377 blocks 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;####Memory leak detection&lt;br&gt;(这里翻译一下文档，我觉得是最有意思的部分)&lt;/p&gt;
&lt;p&gt;Memcheck 跟踪由 &lt;code&gt;malloc/new&lt;/code&gt; 等等在堆上申请的 blocks，所以当程序退出的时候，它能够知道哪些blocks没有被释放掉。&lt;br&gt;如果正确的设置了 &lt;code&gt;--leak-check&lt;/code&gt; 选项，那对于剩下的那些没有被释放掉的blocks，valgrind会逐一的在 &lt;code&gt;root-set&lt;/code&gt; 中确定是否仍然是可达的。这个 &lt;code&gt;root-set&lt;/code&gt; 由两部分组成，一部分是所有线程的&lt;code&gt;通用目的暂存器(General Purpose Registers, GPRs)&lt;/code&gt;，另一部分记录了那些包括栈空间在内的内存的用户空间中被分配的，初始化的，指针指向的数据字等。&lt;br&gt;如果想要访问一个 block， 有两种方法。第一种就是通过 “&lt;code&gt;头指针(start-pointer)&lt;/code&gt;”，即那些指向一个 block 起始地址的指针；第二种是“&lt;code&gt;中间指针(interior-pointer)&lt;/code&gt;”，就是那些指向一个 block 中间的指针。有以下几种情况，会导致出现这种 中间指针：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;可能这个指针一开始是指向block的开始的，但可能在程序中被故意或者无意间移动了。尤其当你使用了&lt;code&gt;tagged pointer&lt;/code&gt;时，&lt;strong&gt;i.e. if it uses the bottom one, two or three bits of a pointer, which are normally always zero due to alignment, in order to store extra information&lt;/strong&gt;(没懂，tagged pointer是啥… )&lt;/li&gt;
&lt;li&gt;可能是内存中的垃圾，随机出现的，一点关系都没有，只是巧合&lt;/li&gt;
&lt;li&gt;可能是指向C++&lt;code&gt;std::string&lt;/code&gt;的内部 char 型数组的指针。例如，有些编译器会在std::string的前面加上三个字（word）来存储这个字符串的长度，字符串的容量还有引用数目，然后再去存真正的字符数组。所以返回的字符数组的地址是三个字后的地址&lt;/li&gt;
&lt;li&gt;有些代码可能申请了一个 block的内存，然后用前八个字节存储（block的大小-8）一个64位的数，&lt;code&gt;sqlite3MemMalloc&lt;/code&gt;就这么干&lt;/li&gt;
&lt;li&gt;可能指向的是用&lt;code&gt;new[]&lt;/code&gt;申请的C++的对象（有析构函数）的数组。在这种情况下，有的编译器会在申请的block最前面，用一个&lt;code&gt;magic cookie&lt;/code&gt;存储这个数组的长度，然后略过这个magic cookie，返回数组的地址。在&lt;a href=&quot;http://theory.uwinnipeg.ca/gnu/gcc/gxxint_14.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;能找到更多的信息。&lt;/li&gt;
&lt;li&gt;也可能是指向了一个使用了多重继承的C++对象的成员&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在内存检测的过程中，你也可以选择性的打开启发式检测，来检测由上述几种情况（&lt;code&gt;stdstring&lt;/code&gt;,&lt;code&gt;length64&lt;/code&gt;,&lt;code&gt;newarray&lt;/code&gt;,&lt;code&gt;multipleinheritance&lt;/code&gt;）导致的中间指针。如果启发式检测被激活，那么如果检测到由上述几种情况导致的中间指针，那么该block仍然会被认为是可达的，就像这个指针也是头指针一样。&lt;br&gt;基于此，来看一下下述的9种可能的情况：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Pointer chain&lt;/th&gt;
&lt;th&gt;AAA Leak Case&lt;/th&gt;
&lt;th&gt;BBB Leak Case&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;RRR ————&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;DR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;RRR —&amp;gt; AAA —&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;DR&lt;/td&gt;
&lt;td&gt;IR&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;RRR 　　　　　　BBB　　　&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;DL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;RRR　　 AAA —&amp;gt; BBB 　&lt;/td&gt;
&lt;td&gt;DL&lt;/td&gt;
&lt;td&gt;IL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5&lt;/td&gt;
&lt;td&gt;RRR ——?—–&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;(y)DR, (n)DL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6&lt;/td&gt;
&lt;td&gt;RRR —&amp;gt; AAA -?-&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;DR&lt;/td&gt;
&lt;td&gt;(y)IR, (n)DL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7&lt;/td&gt;
&lt;td&gt;RRR -?-&amp;gt; AAA —&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;(y)DR, (n)DL&lt;/td&gt;
&lt;td&gt;(y)IR, (n)IL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;8&lt;/td&gt;
&lt;td&gt;RRR -?-&amp;gt; AAA -?-&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;(y)DR, (n)DL&lt;/td&gt;
&lt;td&gt;(y,y)IR, (n,y)IL, (_,n)DL&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;9&lt;/td&gt;
&lt;td&gt;RRR 　　 AAA -?-&amp;gt; BBB&lt;/td&gt;
&lt;td&gt;DL&lt;/td&gt;
&lt;td&gt;(y)IL, (n)DL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;指针图例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;RRR&lt;/code&gt; ：一个 root set 节点，或者一个直接可达的block&lt;/li&gt;
&lt;li&gt;&lt;code&gt;AAA&lt;/code&gt;,&lt;code&gt;BBB&lt;/code&gt; ： 堆上的 block&lt;/li&gt;
&lt;li&gt;&lt;code&gt;---&amp;gt;&lt;/code&gt; ：一个头指针&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-?-&amp;gt;&lt;/code&gt; ：一个中间指针&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;内存泄漏图例：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;DR&lt;/code&gt; ：直接可达&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IR&lt;/code&gt; ：间接可达&lt;/li&gt;
&lt;li&gt;&lt;code&gt;DL&lt;/code&gt; ：直接泄漏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;IL&lt;/code&gt; ：间接泄漏&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(y)XY&lt;/code&gt; ：如果中间指针是&lt;code&gt;real-pointer&lt;/code&gt;（真的指针？），那么就XY&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(n)XY&lt;/code&gt; ：如果中间指针不是&lt;code&gt;real-pointer&lt;/code&gt;（真的指针？），那么就XY&lt;/li&gt;
&lt;li&gt;&lt;code&gt;(_)XY&lt;/code&gt; ：无论是不是&lt;code&gt;real-pointer&lt;/code&gt;（真的指针？），都XY&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每一种可能的泄漏情况，都能归结为上述九种之一，Memcheck工具在输出时，对结果做了合并，得到以下几种输出结果：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;Still reachable&lt;/code&gt;. 对于BBB块来说，这涵盖了上述的 1 和 2， 有头指针或者头指针链表指向了BBB。 因为有指针指向这个块，那么至少在原则上，当程序退出的时候，程序员会把它释放掉。“Still reachable” 的块是一种很常见的情况，基本不是什么问题，所以默认情况下，Memecheck不会单独把它报出来&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Definitely lost&lt;/code&gt;. 对于BBB来说，这是上述的情况3。没有指针指向BBB块了。所以这个块就被标示为“丢失”,因为在程序员基本已经不可能在程序退出的时候把它给释放掉了，因为没有指针指向它（&lt;em&gt;找不到了&lt;/em&gt;）。一般是由于在前面的代码中，丢掉了指向这个块的指针，程序员应该对此负责！&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Indirectly lost&lt;/code&gt;. 对于BBB来说，这涵盖了上述的情况4和情况9。这意味着这些块丢失了，但不是因为没有指针指向它，而是因为指向它们的块自己本身也丢失了（&lt;em&gt;这里的AAA相当于情况3中的BBB&lt;/em&gt;），比如说有一棵二叉树，但指向根节点的指针不见了，那它所有的子孙节点都“Indirectly lost”。因为一旦“Definitely lost”的块找回来了，那么这些间接丢失的块就能够找回来，所以Memcheck也不会单独的报出来&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Possibly lost&lt;/code&gt;. 这涵盖了上述的情况5-8，仍然是对于BBB来说。确实是有至少一个指针指向这个块，但其中至少有一个是中间指针。这也有可能恰好一个内存中的随机值，恰好是这个block中的地址，所以除非你知道有中间指针确实存在，否则你应该给予关注。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;另外，&lt;strong&gt;if suppressions exists for a block, it will be reported as “suppressed” no matter what which of the above four kinds it belongs to&lt;/strong&gt;(suppression 不知道是啥… )&lt;/p&gt;
&lt;p&gt;如果指定了&lt;code&gt;--leak-check=full&lt;/code&gt;，那对于每个绝对丢失或者可能丢失的情况，Memcheck都会给出具体的细节，包括内存是在哪里申请的。（实际上，它把所有因为同样原因发生泄漏，并且有“同样”堆栈信息的记录合并到一起。当然，你可以通过“–leak-resolution”来定义“同样”。）它不能告诉你什么时候，或者为什么发生了内存泄漏，这些需要你自己去弄i。通常，你得尽可能的让自己的程序中不会产生任何”definitely lost”或者”possibly lost”，然后安全退出。&lt;/p&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;8 bytes in 1 blocks are definitely lost in loss record 1 of 14&lt;br&gt;　　at 0x……..: malloc (vg_replace_malloc.c:…)&lt;br&gt;　　by 0x……..: mk (leak-tree.c:11)&lt;br&gt;　　by 0x……..: main (leak-tree.c:39)&lt;br&gt;88 (8 direct, 80 indirect) bytes in 1 blocks are definitely lost in loss record 13 of 14&lt;br&gt;　　at 0x……..: malloc (vg_replace_malloc.c:…)&lt;br&gt;　　by 0x……..: mk (leak-tree.c:11)&lt;br&gt;　　by 0x……..: main (leak-tree.c:25)&lt;br&gt;　　&lt;br&gt;第一条信息描述的是一个很简单的情况，即：一个block中的8个字节直接丢失了。第二条中提到了另外的8个字节也直接丢失了，不同的是，还有80字节因为这8个字节的直接丢失而间接丢失了。这些内存丢失的信息的输出没有什么特定的顺序，所以信息的编号没有太多实际的意义。这些编号可以在使用Valgrind gdbserver的时候，用来列出泄漏的内存块的地址，并且能给出关于这个块为什么还是可达的详细信息。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当指定了&lt;code&gt;--leak-check=full&lt;/code&gt;时，可以使用&lt;code&gt;--show-leak-kinds=&amp;lt;set&amp;gt;&lt;/code&gt;来指定所要显示的泄漏的类型。&lt;br&gt;&lt;code&gt;&amp;lt;set&amp;gt;&lt;/code&gt;，如果想要通过这个set指定显示的类型，可以使用以下方法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在&lt;code&gt;definite&lt;/code&gt;,&lt;code&gt;indirect&lt;/code&gt;,&lt;code&gt;possible&lt;/code&gt;,&lt;code&gt;reachable&lt;/code&gt;中，选择一项或者多项，然后用逗号隔开 &lt;/li&gt;
&lt;li&gt;&lt;code&gt;all&lt;/code&gt; 用来选择所有的类型&lt;/li&gt;
&lt;li&gt;&lt;code&gt;none&lt;/code&gt; 什么都不显示&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;###编译器优化&lt;/p&gt;
&lt;p&gt;上面的文档介绍的是泄漏的症状，在对组件进行测试的时候，所有这里列出的情况都遇到了，还有一些很奇怪的情况，比如：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;string reck = &amp;quot;pull up to the parties&amp;quot;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这句也会报内存泄漏。&lt;br&gt;这个情况查了挺长时间，后来找到了&lt;a href=&quot;http://valgrind.org/docs/manual/faq.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;可能的原因&lt;/a&gt;：&lt;br&gt;有一些编译器在编译的时候会做一些优化，有一些对象在析构了之后，并没有被马上还给OS，而是缓存在一个池里，等待重用，这可能是一个原因。&lt;br&gt;所以在进行内存检测时候，应该尽量关闭编译器的优化，用最原生态的去测试（可能还会慢上若干倍）。&lt;br&gt;对于上面提到的这个问题，有一个变量可以控制，&lt;code&gt;GLIBCXX_FORCE_NEW&lt;/code&gt;，可以控制编译器，每次都重新申请，而不适用池的机制。&lt;br&gt;使用这个变量，就在你当前的终端上输入： &lt;/p&gt;
&lt;pre&gt;&lt;code&gt;export GLIBCXX_FORCE_NEWS=1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;然后进行编译，注意，&lt;strong&gt;这并不是一个CMAKE参数&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;##总结&lt;/p&gt;
&lt;p&gt;本来是想连性能测试都放在一起的，不过感觉太长了。&lt;br&gt;就是把自己学到的一点东西，在这里记录一下。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;##内存泄漏 ！- ！内存泄露&lt;br&gt;应该是前者&lt;br&gt;
    
    </summary>
    
      <category term="C++" scheme="http://lixipeng.me/categories/C/"/>
    
      <category term="Linux" scheme="http://lixipeng.me/categories/C/Linux/"/>
    
    
      <category term="linux" scheme="http://lixipeng.me/tags/linux/"/>
    
      <category term="C++" scheme="http://lixipeng.me/tags/C/"/>
    
      <category term="valgrind" scheme="http://lixipeng.me/tags/valgrind/"/>
    
      <category term="内存泄漏" scheme="http://lixipeng.me/tags/%E5%86%85%E5%AD%98%E6%B3%84%E6%BC%8F/"/>
    
      <category term="memory leak" scheme="http://lixipeng.me/tags/memory-leak/"/>
    
      <category term="memcheck" scheme="http://lixipeng.me/tags/memcheck/"/>
    
  </entry>
  
  <entry>
    <title>你要成功，这很重要</title>
    <link href="http://lixipeng.me/2014-10/malaoluo/"/>
    <id>http://lixipeng.me/2014-10/malaoluo/</id>
    <published>2014-10-30T12:33:30.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;Smartisan T1 降价以来，看到无数人都在骂老罗，我就很奇怪，手机降价了为什么还要被骂&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;。思来想去，感觉只有一种情况让我觉得尚且在情理之中：那些之前买了手机的人，觉得被坑了，所以破口大骂，就像那些高价买了房子的业主，面对着跳水的房价，内心的愤怒并非来源于自己花了冤枉钱，而是来自于别人可能不用花冤枉钱。不过看来看去，却始终没有找到这种人。说脏话的始终都是那些贵了也不买，便宜了也不买的人。&lt;br&gt;我始终想说他们傻逼，因为他们除了“乔布斯重新定义了手机，罗永浩重新定义了傻逼”“我要是买你手机我就是个锤子（这句听起来还挺厚道的，至少和‘谁买了谁就是个锤子’比起来）”，看的有点反胃恶心了。&lt;br&gt;我就想起老罗那句话：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;别人一骂我，我就很局促，因为骂的不对，不在点上；别人一夸我，我就很扭捏，因为夸的还不够&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;当然这个好像是萧伯纳说的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我觉得没什么可骂的。&lt;br&gt;我记得去年过年的时候在家里跟家里人聊天，谈到了保险的事情，我大姐说听说保险其实还挺黑的，你看他收了你那么多钱，但他们业务员会分走一大半（这点不做考证）。&lt;br&gt;然后我说事情不能这么看，你不需要考虑你买的东西的成本，也不需要考虑你付的钱到底怎么分配，因为你在付钱的时候，你是认可了和你付出的代价等价的所接受的服务的价值的。&lt;br&gt;购买行为到底是不是等价交换呢，如果这个“价”是“价值”的话，可能马克思觉得是，但我觉得不是，如果是价值的话，那就是凝结在商品中无差别的人类劳动的总和，决定价值量的是社会必要的劳动时间，是定下来的。可能也就意味着，一袋大米只应该兑换一桶食用油。那如果我喜欢的话，我可以花高价去购买商品，只要我认可就行了啊。所以我刚刚还找我三舅确定了一下，我们俩基本认为这个等价交换并不是事实上的等价交换，而是你认为是等价交换就好了。&lt;br&gt;但有一点很重要，就是这个过程中并没有欺诈行为产生，这个应该很好理解。&lt;br&gt;总结起来就是，如果当时对方对你在信息完备的情况下做了承诺，你在接受了各种信息的基础上做出了购买行为，而后对方对你的承诺一一兑现，那这个消费过程就是很健康的。&lt;br&gt;在Smartisan T1这件事情里，老罗并没有欺诈行为，他说是JDI屏，就是JDI的屏，说是骁龙量产的最快的CPU，就是量产最快的CPU，真材实料，属于兑现了承诺；除此之外，老罗并没有承诺该手机一年或者某个时间段内不会降价，所以现在降价也不是背信弃义，再说，怎么可能不降价（时间确实短了一点，但这个和他们公司的战略有关），当然，老罗更没有承诺我降价不会一下降1000块。所以感觉没有什么好骂的。&lt;br&gt;要说伤心呢，可能还是有一点点伤心的，毕竟在大家都骂老罗的时候，这些人站出来，真金白银的支持老罗，现在被“摆了一道”，可能感觉有些想不通。&lt;br&gt;但话说回来，相信买了手机的大部分还是了解老罗的为人，但凡老罗语录听过几遍的人，应该不难理解一个问题，那就是这个过程实际上不涉及到谁欠谁的，就像有人说老罗要对新东方感恩，老罗的意思是为什么呢，我讲课，我拿工资，谁也不欠谁的，我为什么要感恩？&lt;br&gt;老罗做的不是公益事业，你花钱买手机，我也没骗你，事实上我也不欠你。我不是基金会，你的钱不是白白给我的，你是买手机的。&lt;br&gt;虽然这么看有点绝情，但我想理性一点的还是能想通的。如果是我，至少现在我想象一下自己17号买了手机，然后18号降价一千，我可能会很生气，可能也会自己骂，但绝对不会让别人知道。（我这是谦虚&lt;br&gt;你要是嫌贵就别买得了，我当时看了手机给出的结论也是：不贵，但性价比不高&lt;br&gt;难道买个手机主要目的是为了人家感恩戴德么&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;另外有人拿出老罗当初发的“2500”的微博说事，要是开个玩笑就算了，当真了就是秀下限了。那是发布价行吗？真是不懂那些刷孙子爷爷的人到底是真傻逼还是装傻逼。至于情怀，那不是别人塞给你的，是你由内而外生发的，需要谁来负责么。不想说了，感觉犯愁，看不到希望。&lt;/p&gt;
&lt;p&gt;我作为一个没有买这个手机的人，无论怎么在这说，都没有什么说服力，不过幸运的事我并不想说服谁。&lt;/p&gt;
&lt;p&gt;还是那句话，我只觉得自己所生活的并非人间。&lt;/p&gt;
&lt;p&gt;老罗加油。&lt;/p&gt;
&lt;p&gt;当然也可能事实上你真的变了（虽然我不信吧），但即使这样，也没关系，我是给我知道的那个老罗加油，也是给那个说：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;通过干干净净赚钱，让人相信干干净净的赚钱是可能的；&lt;br&gt;通过实现理想，让人相信实现理想是可能的；&lt;br&gt;通过改变世界，让人相信改变世界时可能的。&lt;br&gt;&lt;strong&gt;尤其是在中国&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;加油。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/1030/laoluo1.png&quot; alt=&quot;可能吧&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/1030/laoluo2.png&quot; alt=&quot;真是可爱(*^__^*) ……&quot;&gt;&lt;/p&gt;
&lt;p&gt;那个网友说的挺对的，如果你成功了，那就证明着一种价值观的成功，这很重要。水杯在手里徐徐跳动。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Smartisan T1 降价以来，看到无数人都在骂老罗，我就很奇怪，手机降价了为什么还要被骂
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="老罗" scheme="http://lixipeng.me/tags/%E8%80%81%E7%BD%97/"/>
    
      <category term="smartisan" scheme="http://lixipeng.me/tags/smartisan/"/>
    
      <category term="T1" scheme="http://lixipeng.me/tags/T1/"/>
    
      <category term="罗永浩" scheme="http://lixipeng.me/tags/%E7%BD%97%E6%B0%B8%E6%B5%A9/"/>
    
  </entry>
  
  <entry>
    <title>享年</title>
    <link href="http://lixipeng.me/2014-09/xiangnian/"/>
    <id>http://lixipeng.me/2014-09/xiangnian/</id>
    <published>2014-09-27T04:00:45.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;p&gt;今天坐火车回家，路过唐山，突然想起来本科时候给我们上毛概课的杨凤永老师，记得他说过他是唐山人。&lt;br&gt;于是就和当时一起选他的课的同学叙旧，刚说了没几句，同学说，他不是已经过世了么？&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;我就有点蒙了，以为他开玩笑呢。然后他说是吴克峰老师微博上发过。所以我就去吴克峰老师的微博上去找，最后真的找到了，是今年的二月份，按兄弟所说，享年54岁。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我一直觉得杨老师是一个很好的老师，不仅仅是今天，平时也会时不时的想起来。我记得还是郭仁朋学长推荐的毛概老师，最后上的也很开心。唯一有点小遗憾的是，最后毛概只有80分，不过强哥小柳她们也都有90多，我记得我答的特别好，唯一不足的是我应该是在试卷上把老师的名字写错了。因为我一直记不清到底是杨风永，还是杨凤永，杨老师第一次上课的时候肯定是在黑板上写了自己名字的，但这个就像单词，我永远都记不清immediately的t后面有没有e，只要一次没记牢，就没有别的机会了。毕竟是男老师，潜意识里觉得不是凤吧。&lt;br&gt;所以我觉得之所以分那么低，是因为我把老师的名字写错了。但到底原因是什么，到现在也不知道，而且看这种情况，可能永远不会知道原因了。哦，我记得放暑假？的时候，我查了分，因为觉得低，还给杨老师发了一条短信，大意就是老师你好你看我上课这么这么认真书上的内容背的那么那么熟练最后的卷子上写的怎么怎么清楚，为啥只有80分捏？但最后老师也没有回，老师到底有没有看到短信，好像也永远都不会知道了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在本科里，印象很深的老师一只手是可以数的出来的。&lt;br&gt;首先是耿薇老师，在我印象中，燕姐好像都没有数落过我们，但我记得有一天早晨上高代课，好像因为有同学来的比较晚，然后耿薇老师就把我们骂了一顿，我就是在那个时候发现自己是个抖M的… 毕竟高中的时候老师骂人还是比较日常的，到大学之后突然一下子没人管了，也挺失落的，所以感觉这个老师真好。还有就是耿薇老师讲的真的很好，虽然我都没太听懂吧… 也不用投影仪，就一直板书，感觉很亲切，而且讲的很明白，不像其他老师，自己的PPT都不知道说的啥，天哪，太恶心了；&lt;br&gt;然后是艾老。诶… 咋说呢… 不想说了… 据说他的课被停了？反正无论是因为什么原因，以后要是谁再否认社会在进步，我就分分钟打他脸；&lt;br&gt;还有一个林晨老师。也还好吧，听了一学期的大学语文课，虽然当时他说的一些东西，到现在玩味起来，也不觉得都是对的，印象中最深的是他说天津没有女孩，因为天津方言的问题，然后学天津话，又学了苏州话？，大家也是很开心。但我之所以对这一段印象比较深刻，是因为大三没课的时候，我去蹭了一节林晨老师给文学院？上得一节专业课，他又表演了一次。我是对梗有洁癖的人，这让我觉得很尴尬。所以我就不明白了，当时作为一个艾粉，我尼玛竟然为了占位子，把第一节军事理论课听了两遍… 感觉好大的污点，自己不是一个干净的人了。然后林晨老师说他信佛，但他又是党员，怎么说呢，有点别扭。我是一个；&lt;br&gt;还有一个吴克峰老师。近代史没有选到，但是大三没课的时候去蹭了几节，这也是唯一和兄弟之间的接触了。印象比较深的就是吴克峰老师经常一字一顿地说：“是不是这样，就是这个样子”。&lt;br&gt;最后就是杨凤永老师，他和吴克峰老师给我的感觉都是正直而真实。那一学期就最后给划范围的时候他才翻开书，其他的时候都是他在讲他的事情。听得真实津津有味，感觉是一个非常有经历的人，好像上山下乡过，然后在监狱工作过，贩卖过草莓？和鱼，等等等等。讲唐山地震时候的事情，讲他没有入党的事情等等等等。虽然细节都记不清了，但现在想起一些轮廓，还是能噌的一下记起他在讲台上抽烟的样子，眼圈里有一些晶莹的小东西，这种对自己并不在乎的规则大肆亵渎的男人，简直是太性感了。他好像还喝酒，就是在他身上好像能看到梁纯的一些东西，都很真实。这种真实让你觉得这才是一个老师的样子。比起其他老师道貌岸然，冠冕堂皇，让你不由得就爱上他。某些老师我就不说了，你再和学生打成一片，也别竖中指啊，弄得我都很尴尬你知道吗？&lt;br&gt;再其他的老师我就不说了，自己上课不备课，你上课怎么能不备课呢？你是老师你知道吗？&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;对杨老师具体的事情都记不清了，真的就只剩下一个轮廓，这个轮廓是也是当时留下来的，所以会时不时的想起来，但想起来的还就只是这个轮廓，记得他是一个好老师，但为什么好来着？不记得了诶。&lt;br&gt;记得他是一个很有经历的人，才五十几岁，可能就是因为平时烟抽得太多了，酒也喝的太多了，一直过着他想要的生活。&lt;br&gt;所以谁过世了都说享年多少多少，但有多少人是真的在活着的时候在享受生活呢&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天坐火车回家，路过唐山，突然想起来本科时候给我们上毛概课的杨凤永老师，记得他说过他是唐山人。&lt;br&gt;于是就和当时一起选他的课的同学叙旧，刚说了没几句，同学说，他不是已经过世了么？
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="南开大学" scheme="http://lixipeng.me/tags/%E5%8D%97%E5%BC%80%E5%A4%A7%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>(chrome extension) noweibo</title>
    <link href="http://lixipeng.me/2014-09/chrome-extension-noweibo/"/>
    <id>http://lixipeng.me/2014-09/chrome-extension-noweibo/</id>
    <published>2014-09-20T12:34:48.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;夏日一阵雷雨后，看到美丽的彩虹。当你偶然回想昨天，四季悄然在流转。&lt;br&gt;你曾有不平凡的心，也曾有很多的渴望。当你仰望头顶蓝天，才发现，一切很平常。&lt;br&gt;– 许巍 《每一刻都是崭新的》   (&lt;em&gt;^__^&lt;/em&gt;) ……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;白天在实验室的时候，我每次回头，都能发现某同学在刷微博，这是如此的明显以至于我总是为她捏一把汗，万一被老师发现了怎么办，毕竟该大姐一条命令搞得全组上下不得安宁，怎么还能这么堂而皇之的干这种事情。&lt;br&gt;我并不是一个酷爱偷窥别人屏幕的绅士，但尽管如此，我还是能在第一眼看到屏幕的时候，分辨出她刷的是微博，而不是在标数据，原因就在于微博的页面设计的很有特色，权重最大的一个feature就是这个：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/0920/weibonav.png&quot; alt=&quot;weibo nav&quot;&gt;&lt;/p&gt;
&lt;p&gt;这个默认主题的导航栏特别显眼，类似的还有人人网的导航栏。这种始终停在窗口最上方的导航栏曾经让我如此的痴迷，以至于当我发现Bootstrap这种神器之后，不停的用这个。&lt;/p&gt;
&lt;p&gt;除此之外，&lt;br&gt;还有发微博的那个部分：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/0920/weibopublish.png&quot; alt=&quot;weibo publisher&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有微博右侧显示头像还有广告的那一栏：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/0920/weiboright.png&quot; alt=&quot;weibo right box&quot;&gt;&lt;/p&gt;
&lt;p&gt;还有微博的即时通讯的那个部分。不上图了，实在是太费劲了，截出来的图太大了都，然后markdown还不能设置图片大小，搞得得往这里插HTML代码，否则我害得用Photoshop改，主要是我这个photoshop还是破解版，太烦了。&lt;br&gt;&lt;img src=&quot;/img/0920/weibo1.png&quot; alt=&quot;weibo&quot;&gt;&lt;br&gt;所以如果把这些比较明显的部分去掉，只留下微博的部分，可能就没有那么显眼了。比如这样：&lt;br&gt;&lt;img src=&quot;/img/0920/weibo2.png&quot; alt=&quot;weibo&quot;&gt;&lt;/p&gt;
&lt;p&gt;是不是就性感一点了。&lt;/p&gt;
&lt;p&gt;所以你有没有注意到地址栏里有一个小眼睛，(&lt;em&gt;^__^&lt;/em&gt;) ……&lt;/p&gt;
&lt;p&gt;实现起来肥肠简单啊，就是把那几个div隐藏起来就行了，连jquery都不用。其实我白天在实验室也不刷微博的，这个所谓的插件也是一个附属品，昨天晚上本来要去打羽毛球的，但结果吃完饭的时候跟学长闹了点不愉快，所以就没去，索性就待在实验室里了。10点左右的时候吧，老师去打羽毛球回来，看到我还问我，还没回去啊~ 加油啊~ 搞得人家心里暖暖的笑。&lt;br&gt;这一周还写好了那个标注的插件，为此研究了好久chrome插件的开发文档，最近这个Google被封的实在是有些严重，所以只能看360翻译的文档，感觉很屈辱，很羞耻，都快哭了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/img/0920/noweibo.png&quot; alt=&quot;noweibo v1.0&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://github.com/lisnb/noweibo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Github noweibo&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;夏日一阵雷雨后，看到美丽的彩虹。当你偶然回想昨天，四季悄然在流转。&lt;br&gt;你曾有不平凡的心，也曾有很多的渴望。当你仰望头顶蓝天，才发现，一切很平常。&lt;br&gt;– 许巍 《每一刻都是崭新的》   (&lt;em&gt;^__^&lt;/em&gt;) ……&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="fullstack" scheme="http://lixipeng.me/categories/fullstack/"/>
    
    
      <category term="chrome extension" scheme="http://lixipeng.me/tags/chrome-extension/"/>
    
      <category term="javascript" scheme="http://lixipeng.me/tags/javascript/"/>
    
  </entry>
  
  <entry>
    <title>倒也谈不上天理难容</title>
    <link href="http://lixipeng.me/2014-08/xiaoqiujunan/"/>
    <id>http://lixipeng.me/2014-08/xiaoqiujunan/</id>
    <published>2014-08-30T16:42:36.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;和我无能的前半生的大部分时候一样，我拿这些西装革履的流氓完全没有办法，我不能抑制地又说了脏话，“我操，你们他蚂的怎么这么流氓?”&lt;br&gt;– 罗永浩 《秋菊男的故事》&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;今天早晨起来没吃饭，去Smartisan T1的线下体验，回来之后去联通那换了个套餐，排队排了一个半小时，到学校的时候已经一点多了，就去超市买点东西吃。&lt;br&gt;结账的时候我就突然想起来之前在宿舍的时候跟同学说，这几天的小浣熊里又有“再来一包”的卡片了，他跟我说，不要攒好多然后一下子去兑换，他可能不给兑，基于以往的经历和当前市场现状，我表示赞同。&lt;br&gt;所以结完账了我顺嘴问了一句，我说，小浣熊里有“再来一包”的卡片，这里能给兑换吗？实际上这个问题本身就已经很愚蠢了，为什么不给呢？但还是那句话，基于以往的经历和当前市场现状，倒也显得理所当然。&lt;br&gt;我在这里描述的时候不太想称呼那个售货员为阿姨，所以叫她老娘们儿。&lt;br&gt;老娘们儿说：有的给兑，有的不给兑。&lt;br&gt;我就很疑惑，又问：什么叫“有的给兑，有的不给兑”？&lt;br&gt;老娘们儿说：那卡片都不一样，有的是能在这兑的，有的是要到网上兑的。&lt;br&gt;我觉得说的也很有道理，但基本等于没说，我学历不高，但书还是读过一点儿的，卡片上要是说要到网上兑换，我会傻了吧唧的拿着卡片到你这来吗？&lt;br&gt;然后我就说：那也就是说，那种再来一包的，写着到零售商那兑换的，你这就能兑，是吗？&lt;br&gt;老娘们儿终于抛出我最讨厌的那句话：不行，得是在我们这买的，才能兑。&lt;br&gt;我一直觉得这种说法神经病，加上没吃饭，我一饿就着急，脾气就不好。诚恳的说，最近听老罗语录什么的比较多，加上昨天前天看了两遍他和王自如对峙的视频，所以顿时我的感情就上来了。&lt;br&gt;我说：那你怎么确定是在你这买的呢（或者：那我得怎么证明我这个小浣熊是在你这买的呢，记不太清了）？&lt;br&gt;老娘们儿显然恍恍惚惚，闪烁其词：在我这买小浣熊，我们一般都是给开小票的。&lt;br&gt;我一听就不爽了，因为我酷爱吃小浣熊，尤其是烤肉味，基本每天一包，我在她这买小浣熊买了四五次了，每次都四五包，但从来没有人跟我提过小票的事情，你这个“一般”是什么意思呢？没开就是没开，什么叫“一般”给开呢？没给我开啊也。况且我也没有拿着一沓子卡片扔你柜台上让你给我兑换，你这样是干啥呢？&lt;br&gt;然后我就说啊：那不是吧，我在这买了四五次，每次四五包，但从来没给我开过小票，也没跟我提过开小票的事情，你这个一般是什么意思呢？&lt;br&gt;老娘们儿仍然固执的说：我们一般都是给小票的，尤其是小浣熊这种，可以兑奖的，我们都是给开小票的。&lt;br&gt;然后我就又问：可是我确实是买了四五次，每次四五包，你没给我开小票啊？&lt;br&gt;老娘们儿直接转移话题：你们拿来，我就给你们兑，你都不知道，不光是小浣熊，之前…&lt;br&gt;我已经很生气了，就说：你跟我说这个干嘛啊？&lt;br&gt;老娘们儿显得很权威：我给你解释，你就听。要是拿来我就给你们兑…&lt;br&gt;我就打断她：那你跟我解释这个我不关心，你先解释，你说一般给开小票，但我买了好几次，但没有人给我开小票，这是怎么回事？&lt;br&gt;老娘们儿脸一沉：那你拿来，我能兑就给你兑了呗。&lt;br&gt;我当时已经觉得没有办法跟她继续对话下去了，瞪了她一眼，说了一句：真是的。&lt;br&gt;就走掉了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;真的，你每天在各种场合都能遇到这种老娘们儿，把你搞得非常痛苦。交个话费，那业务员脸上那个不高兴，简直不爱理你的那个样子，我他妈是给你送钱的，我是管你要钱的啊？就算我管你要钱，你说不给不就得了吗？充个洗衣卡，不能充，只能交四十，我说是说这个卡是一次性的，不能充，没了再重新办吗？恩，四十。四十你个蛋啊，最后听别人说了才弄清楚，是每次充值要充四十而已，这玩意表达起来那么难吗？四十，四十的，我去充钱洗衣服，我让你给我洗衣服了是怎么的，那个样子让你问都不敢多问，真他妈神经病。&lt;br&gt;整天都是这些傻老娘们儿，弄得你忐忐忑忑，胆战心惊的跟她们打交道，非常痛苦。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;我决定以后跟她们对抗到底！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;和我无能的前半生的大部分时候一样，我拿这些西装革履的流氓完全没有办法，我不能抑制地又说了脏话，“我操，你们他蚂的怎么这么流氓?”&lt;br&gt;– 罗永浩 《秋菊男的故事》&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="小浣熊" scheme="http://lixipeng.me/tags/%E5%B0%8F%E6%B5%A3%E7%86%8A/"/>
    
      <category term="傻老娘们儿" scheme="http://lixipeng.me/tags/%E5%82%BB%E8%80%81%E5%A8%98%E4%BB%AC%E5%84%BF/"/>
    
  </entry>
  
  <entry>
    <title>bubbles bling bling</title>
    <link href="http://lixipeng.me/2014-06/bubbles-bling-bling/"/>
    <id>http://lixipeng.me/2014-06/bubbles-bling-bling/</id>
    <published>2014-06-21T09:03:29.000Z</published>
    <updated>2016-03-06T15:13:22.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;在很久很久以前，你拥有我，我拥有你&lt;br&gt;今天发现《外面的世界》真好听 (&lt;em&gt;^__^&lt;/em&gt;) &lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/jquery-2.1.0.min.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/customize/bubble/udalpha.js&quot;&gt;&lt;/script&gt;
&lt;input type=&quot;hidden&quot; id=&quot;bubbleword&quot; value=&quot;南开大学&quot;&gt;
&lt;canvas id=&quot;myCanvas&quot;&gt;&lt;/canvas&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/customize/bubble/bubbles.js&quot;&gt;&lt;/script&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/js/customize/bubble/main.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;明天是本科学校的毕业晚会&lt;br&gt;“聚散天涯，依依南开”&lt;br&gt;&lt;img src=&quot;/img/0621/1.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;那天很激动，感觉离开很舍不得，非常的“依依”。到现在没有人拿着这个状态质问我到底回不回去，反倒是当我说我想回去看看的时候，都在问我：你回去干嘛？&lt;br&gt;嗯，又不是杰出校友。&lt;br&gt;不过作为一个杰出菜逼校友，悄悄的溜回去看一下，还是请大家高抬贵手，轻喷&lt;br&gt;有大半年没回去了（每次我这么说都很忐忑，因为总感觉有种“你爱多久没回去就没回去呗，学校又不在乎你”的感觉，不过你知道的，鹏宝是一个感性的人捂脸笑），跟小马哥说好了要回去，小马哥表示欢迎，并表示可以住在他们宿舍，我非常开心，上一次回去也是在他宿舍睡的，但现在头发有点长，不知道能不能进去呢。&lt;br&gt;其实主要是感觉头发不知道什么时候就剪掉了，赶紧抓紧时间回去得瑟一下，要不白留了（我这人，太丁日虚荣捂脸笑）&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前几天翻到&lt;a href=&quot;http://gate.guokr.com/&quot; title=&quot;果壳任意门&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;果壳任意门&lt;/a&gt;，在编程语言那个tab下面看到了“Codecademy”（没错就这点出息了），一直想学点js，css什么的，因为鹏宝对美好的事物总是有些追求尽管鹏宝自己并不那么美好。&lt;br&gt;它的第一个课程是“&lt;a href=&quot;http://www.codecademy.com/zh/courses/animate-your-name/0/1&quot; title=&quot;codecademy: animate your name&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Animate Your Name&lt;/a&gt;”，就用一些小泡泡把你输入的东西画出来，鼠标划上去就动，跟上面的一样，我觉得太漂亮了因为鹏宝没见过什么世面，正好还是个教程，所以那天晚上毅然放下了手里的活计，开始教程。&lt;br&gt;&lt;img src=&quot;/img/0621/2.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/0621/3.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;结果教程只是在说一些基本的js，定义变量啊，列表啊什么的，根本没有讲怎么画这些小泡泡并且让它动起来，我很惋惜，所以就找到了它的源文件，想自己看一下。&lt;br&gt;主要有三个源文件&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;main.js  这个里面就是定义显示什么文字还有泡泡的颜色的&lt;/li&gt;
&lt;li&gt;bubble.js  主要的文件，画泡泡和接收鼠标事件然后做出动作的&lt;/li&gt;
&lt;li&gt;alphabet.js  一开始没看懂，后来明白了。是把文字转换成点阵坐标的&lt;br&gt;看到最后的文件，我想起来大一在上C++的上机课的时候，王超老师让我们写一个小程序，输入一个字母，然后用这个字母作为“像素”，把这个字母表示出来&lt;br&gt;大概就是这个样子：&lt;br&gt;&lt;img src=&quot;/img/0621/4.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;后来老师想了想，算了吧，太难了，固定输出一个字母的形状就行了。&lt;br&gt;当时好像也觉得，给一个字母，不知道字母各个像素的坐标是什么，怎么能表示出来呢&lt;br&gt;所以这个教程里引入了一个js文件，内容大概就是：&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;alphabet.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.alphabet=&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                A79:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        W:&lt;span class=&quot;number&quot;&gt;75&lt;/span&gt;,P:[[&lt;span class=&quot;number&quot;&gt;64&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-102&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-102&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;89&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-79&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;104&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;122&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;23&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;118&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;31&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;133&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;46&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;136&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;34&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;153&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;69&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;28&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;168&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;183&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;]]&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                A78:&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        W:&lt;span class=&quot;number&quot;&gt;85&lt;/span&gt;,P:[[&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;148&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-103&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;137&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;8&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-92&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;125&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-79&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;124&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;58&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;135&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;68&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;148&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;-35&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;40&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;111&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;33&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;103&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;21&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;86&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                [&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;106&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;51&lt;/span&gt;],[&lt;span class=&quot;number&quot;&gt;67&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;92&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;112&lt;/span&gt;]]&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                ...&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
上面的这段表示的是字母“O”和“N”的各个点的坐标，键值是“A”+字母的ASCII（英语发音：/‘æski/ ASS-kee，以后我读这个的时候不要纠正我这个是 “ask” 或者 “ask2”了行吗），W的值是这个字母的宽度，用于显示多个字符的时候计算offsite.&lt;br&gt;后面的P就是各个点的坐标了。“O”的第一个点的坐标[64, 89, 9, -102]，64和89分别是横纵坐标（咦，这两个数怎么这么奇怪？不要查我水表… ），9是这个点的大小，半径之类的，你看到那些点的大小都不是一样的，第四个数字好像是标示这个点的透明度之类的，原来的代码里用这个数字的部分被注释掉了，但看起来就是比如字母的末端可能fade了之类的。&lt;br&gt;所以通过这个文件就解决了当拥有了泡泡的时候，怎么组成字母的问题。&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;bubble.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function phraseToHex(phrase) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hexphrase = &lt;span class=&quot;string&quot;&gt;&quot;&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; phrase.length; i++) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hexphrase += phrase.charCodeAt(i).toString(&lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; hexphrase;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;drawName&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;name,colors&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;addLetter&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;cc_hex, ix, letterCols&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//画字符的函数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hexphrase = phraseToHex(name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; col_ix = &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; hexphrase.length; i += &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cc_hex = &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt; + hexphrase.charAt(i) + hexphrase.charAt(i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cc_hex != &lt;span class=&quot;string&quot;&gt;&quot;A20&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            col_ix++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addLetter(cc_hex, col_ix, letterColors);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
先用phraseToHex函数把输入的字母字符串，转换成ASCII的字符串，然后每两个前面加上一个“A”去document.alphabet里找字符的点阵坐标，画出。&lt;br&gt;我一开始觉得这个屌啊，这岂不是可以表示一切了么，所以就写了几个汉字，结果表示出来的并不是汉字，而是几个字母，后来我才想起来，这个文件里没有汉字的点阵坐标，所以表示不出来汉字。&lt;br&gt;那个bubble.js我还没有完全看懂，尤其是语法，因为javascrip的函数定义方式感觉很奇怪，我主要想解决的问题是，怎么能够让这个玩意显示汉字呢。&lt;br&gt;最主要的就是1、给出汉字的坐标；2、以汉字为键值，找到这个坐标。&lt;br&gt;对于第一个问题：怎样给出汉字的坐标&lt;br&gt;我的解决思路是，手工的去写，这样能保证非常精准。开玩笑的，怎么可能，多傻逼啊…&lt;br&gt;之前写过一个把图片转换成字符画的小程序&lt;br&gt;&lt;img src=&quot;/img/0621/ali.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/0621/5.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;呃…虽然失真比较严重，是因为阈值没有仔细设置而且字符比较单一，知道可以实现就放在那了。&lt;br&gt;就是把图片灰度化，然后根据像素的数值[110,255]的就是空白，[40,110)的就是”.”，[0,40)的就是”@”。&lt;br&gt;那如果有文字的图片就也可以这么做，所以就把文字先生成图片，然后根据图片的像素标出一些点&lt;br&gt;但实际上，如果以像素为单位的话，那点就太多了，所以就把图片分块，在一个块里，有多少个像素小于一定阈值（就是黑到一定程度，证明这个块是组成字的一部分），这个块就可以形成一个点，再算一下坐标什么的，就可以了。&lt;br&gt;最后根据输入的字符串，生成一个js文件，替换原来的alphabet.js，就搞定了。&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;figcaption&gt;&lt;span&gt;chartojs.py&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#!/usr/bin/env python&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Author: LiSnB&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Date:   2014-06-20 18:36:07&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified by:   LiSnB&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Last Modified time: 2014-06-21 19:25:43&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# @Email: lisnb.h@gmail.com&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import os&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; PIL &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; Image, ImageFont, ImageDraw&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; math &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import matplotlib.pyplot as plt&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; random&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#import chardet&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getalphabet&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(text,jspath)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size = &lt;span class=&quot;number&quot;&gt;18&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    partical = &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    p_th = math.pow(partical, &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)-partical&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    font = ImageFont.truetype(&lt;span class=&quot;string&quot;&gt;&#39;hwhp.ttf&#39;&lt;/span&gt;, size+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    alphas = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; text:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        im = Image.new(&lt;span class=&quot;string&quot;&gt;&#39;L&#39;&lt;/span&gt;, (size,size),&lt;span class=&quot;number&quot;&gt;255&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dr = ImageDraw.Draw(im)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        dr.text((&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;), t,font = font,fill=&lt;span class=&quot;string&quot;&gt;&#39;#000000&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        pixel = im.getdata()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_array = np.array(pixel).reshape(size,size).T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;# print p_array&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        p_array = p_array.tolist()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        points = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(size/partical):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; range(size/partical):&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                a = p_array[partical*i][partical*j:partical*j+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                a.extend(p_array[partical*i+&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;][partical*j:partical*j+&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; a.count(&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&amp;gt;p_th:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    tmp_points=&lt;span class=&quot;string&quot;&gt;&#39;[%s, %s, %s, %s]&#39;&lt;/span&gt;%( size*i,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    size*j+size,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    random.randint(&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;,&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                                    &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                    points.append(tmp_points)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t_key = t.encode(&lt;span class=&quot;string&quot;&gt;&#39;unicode_escape&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t_key = &lt;span class=&quot;string&quot;&gt;&#39;A%s&#39;&lt;/span&gt;%t_key[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;:]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        P = &lt;span class=&quot;string&quot;&gt;&#39;P:[%s]&#39;&lt;/span&gt;%(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;.join(points))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alpha = &lt;span class=&quot;string&quot;&gt;&#39;%s:&amp;#123;W:180,%s&amp;#125;&#39;&lt;/span&gt;%(t_key,P)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        alphas.append(alpha)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    content = &lt;span class=&quot;string&quot;&gt;&#39;document.alphabet=&amp;#123; %s&amp;#125;;&#39;&lt;/span&gt;%(&lt;span class=&quot;string&quot;&gt;&#39;,&#39;&lt;/span&gt;.join(alphas))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;with&lt;/span&gt; open(jspath,&lt;span class=&quot;string&quot;&gt;&#39;wb&#39;&lt;/span&gt;) &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; f:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        f.write(content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; __name__ == &lt;span class=&quot;string&quot;&gt;&#39;__main__&#39;&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    getalphabet(&lt;span class=&quot;string&quot;&gt;u&#39;允公允能日新月异&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;udalphabet.js&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这个就可以生成一个拥有“允公允能日新月异”的js文件了。&lt;br&gt;这里有几个问题：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;文字生成图片使用PIL做的，但官网上的PIL库在编译的时候少了点什么，在使用文字生成图片的时候会报错，我不记得是什么错误了，解决办法是在&lt;a href=&quot;http://www.lfd.uci.edu/~gohlke/pythonlibs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Unofficial Windows Binaries for Python Extension Packages&lt;/a&gt;这个地方下载非官方的PIL库，并在使用时，由&lt;br&gt;  import Image&lt;br&gt;变成&lt;br&gt;  from PIL import image&lt;/li&gt;
&lt;li&gt;文字生成图片的时候，需要指定文字的字体，我本来想用比较喜欢的一些字体，但实际上，因为之后会对图像进行分块，所以要尽量使用粗一点的字体，我选择的是华文琥珀，如果你的电脑上装了这个字体（应该是都装了的），那看起来是这个样子的：&lt;br&gt;&lt;span style=&quot;font-family:华文琥珀;font-size:30px&quot;&gt;英格兰你伤了哥的心了&lt;/span&gt;&lt;br&gt;但也因为汉字比较复杂，所以最后分辨率比较低，很写意的感觉… &lt;/li&gt;
&lt;li&gt;我也不知道原来的那个alphabet.js是怎么规定的，直接按照正常的方向生成的坐标画出来竟然是倒下来的，也懒得研究js的代码了，直接在生成坐标的时候，使用了像素矩阵的转置，就是代码中的第28行&lt;br&gt;p_array = np.array(pixel).reshape(size,size).T&lt;/li&gt;
&lt;li&gt;汉字用unicode表示，应该是UTF-8的，所以键值用“A”+t.encode(‘unicode_escape’)[2:]，因为比如“允”的表示是“\u5141”，键值最后是“A5141”。汉字的笔画比较复杂，所以最后生成的点也比较多，结果不在这里放了，可以看这个&lt;a href=&quot;/js/customize/bubble/udalpha.js&quot;&gt;udalphabet.js&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后解决第二个问题：以汉字为键值，找到这个坐标&lt;br&gt;原来的版本因为字母使用ASCII表示的，所以每个字符的长度是2，但现在汉字是4，所以要对bubble.js改一点：&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;figcaption&gt;&lt;span&gt;bubble.js&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;function drawName(name,colors)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for (&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; hexphrase.length; i += &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; cc_hex = &lt;span class=&quot;string&quot;&gt;&quot;A&quot;&lt;/span&gt; + hexphrase.charAt(i) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         + hexphrase.charAt(i + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         + hexphrase.charAt(i + &lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         + hexphrase.charAt(i + &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (cc_hex != &lt;span class=&quot;string&quot;&gt;&quot;A20&quot;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            col_ix++;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        addLetter(cc_hex, col_ix, letterColors);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;大功告成，最后的效果就是&lt;a href=&quot;#myCanvas&quot;&gt;这样&lt;/a&gt;了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;在很久很久以前，你拥有我，我拥有你&lt;br&gt;今天发现《外面的世界》真好听 (&lt;em&gt;^__^&lt;/em&gt;) &lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="python" scheme="http://lixipeng.me/categories/python/"/>
    
      <category term="js" scheme="http://lixipeng.me/categories/python/js/"/>
    
    
      <category term="python" scheme="http://lixipeng.me/tags/python/"/>
    
      <category term="js" scheme="http://lixipeng.me/tags/js/"/>
    
      <category term="bubble" scheme="http://lixipeng.me/tags/bubble/"/>
    
      <category term="汉字点阵" scheme="http://lixipeng.me/tags/%E6%B1%89%E5%AD%97%E7%82%B9%E9%98%B5/"/>
    
  </entry>
  
  <entry>
    <title>gdb-coredumped</title>
    <link href="http://lixipeng.me/2014-06/gdb-coredumped/"/>
    <id>http://lixipeng.me/2014-06/gdb-coredumped/</id>
    <published>2014-06-19T15:33:40.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;说的都没错，但听起来怪怪的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天晚上想把代码在服务器上走一下形式，编译运行一下，通过了就收拾收拾回宿舍了。&lt;br&gt;结果编译没有问题，运行的时候突然报了“段错误 (core dumped)”，当时就尿了，呵呵，学长学姐的“legacy”。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;代码需要在windows和linux上跨平台运行，为了避免使用ftp工具（一开始一直使用psftp, 虽然命令行看起来有点炫酷但实在是太不方便了，后来找到了一个FileZilla, 挺好用的，但也挺麻烦），就开始用git。这几天还和范老师猛烈的研究git怎么用，幸好有林大神。&lt;br&gt;所以代码都是在Windows上写的，用Visual Studio。Visual Studio 我装了两个版本，2008 和 2013 Express。因为实验室里之前的组件都是用2008编译的，所以依赖那些的组件在2013上编译通不过，也就没法调试。但2008写代码实在是太难看了，尤其是配合上Visual Assist，简直难看，学长又拒绝使用2013重新编译原来的组件，所以机智的鹏宝会有一个build目录和一个build_2013目录，cmake两次，一次用2008的，一次用2013的，用2013的看代码写代码写注释，用2008的编译调试，诶，疲劳。&lt;br&gt;怎么说那去了。&lt;br&gt;总之发现了错误我很慌张，因为在windows上是没有问题的（诶，以后被测试的抓到可能说的最多的一句话了），所以也就没法在VS里调试，项目又很大，用gdb一点一点调试肯定会很难过。所以就去网上找，然后发现可以利用出错之后的core文件使用gdb找到出问题的地方。&lt;br&gt;然后就用 -DCMAKE_BUILD_TYPE=Debug 给生成的可执行文件添加了调试信息（这也解决了我之前的一个问题，我之前问范老师，为啥windows上的大家都提供一个release的lib，一个debug的lib，但linux上的只有release的呢？范老师说，linux上可能只有release吧。嘻嘻嘻嘻嘻，才不是…）&lt;br&gt;然后调整了core文件的大小限制，生成了core文件，最后用gdb找到了出问题的位置，卧槽这的代码我还没开始看呢… 烦死了。&lt;br&gt;值得庆幸的是，鹏宝机智的发现，原来是输入的文件的格式不对，程序没有问题，但其实这也算有问题，鲁棒性不强… robustness哈哈，这个单词好有意思…&lt;br&gt;所以问题就解决了… &lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在程序运行出错时，linux会生成一个core文件，用以记录系统运行的错误，这个文件的大小不一，依据当时的环境而定，可以设置这个文件的大小上限，如果上限小于当时实际的大小，那么这个文件就不会生成。&lt;br&gt;可以使用：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;built_in&quot;&gt;ulimit&lt;/span&gt; -c unlimited&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;取消对下一次运行时，对core文件大小的限制，也可以在系统的配置文件中修改&lt;br&gt;为了尝试，我们写一个小程序&lt;br&gt;代码如下：&lt;br&gt;&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;figcaption&gt;&lt;span&gt;foo.cpp&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;iostream&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;span class=&quot;meta-keyword&quot;&gt;include&lt;/span&gt; &lt;span class=&quot;meta-string&quot;&gt;&amp;lt;vector&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//using namespace std;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;baz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;vector&lt;/span&gt;&amp;lt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;&amp;gt; vc;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;cout&lt;/span&gt;&amp;lt;&amp;lt; vc[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]&amp;lt;&amp;lt; &lt;span class=&quot;built_in&quot;&gt;std&lt;/span&gt;::&lt;span class=&quot;built_in&quot;&gt;endl&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;biz&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	baz();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;bar&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	biz();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;foo&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	bar();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	foo();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;写了这么多函数是为了突出调用关系。&lt;br&gt;很显然，在baz()函数中，访问了不存在的vc[2]会发生错误&lt;br&gt;先设置core文件的大小上限，然后使用g++编译代码，运行，发现产生了段错误，coredumped，并且在该目录下生成了core文件。&lt;br&gt;&lt;img src=&quot;/img/0619/1.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;随后，为了找到问题出现在哪里，使用gdb&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;gdb ./foo core&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;然后输入&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;(gdb) &lt;span class=&quot;built_in&quot;&gt;where&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;&lt;img src=&quot;/img/0619/2.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;就能看到堆栈和调用关系，找到出现问题的位置了，比如在这里我们就把问题定位在baz()函数里了，但问题是，如果baz()函数很复杂，那么能不能找到更精准的定位呢？&lt;br&gt;我们需要在编译的时候使用-g选项为生成的可执行文件添加调试信息：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;g++ foo.cpp -o foo -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;br&gt;然后再按照上面的流程，就会发现，问题出现在baz()函数的第10行&lt;br&gt;&lt;img src=&quot;/img/0619/3.PNG&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;说的都没错，但听起来怪怪的&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;今天晚上想把代码在服务器上走一下形式，编译运行一下，通过了就收拾收拾回宿舍了。&lt;br&gt;结果编译没有问题，运行的时候突然报了“段错误 (core dumped)”，当时就尿了，呵呵，学长学姐的“legacy”。&lt;/p&gt;
    
    </summary>
    
      <category term="linux" scheme="http://lixipeng.me/categories/linux/"/>
    
      <category term="C++" scheme="http://lixipeng.me/categories/linux/C/"/>
    
    
      <category term="linux" scheme="http://lixipeng.me/tags/linux/"/>
    
      <category term="gdb" scheme="http://lixipeng.me/tags/gdb/"/>
    
      <category term="C++" scheme="http://lixipeng.me/tags/C/"/>
    
      <category term="coredumped" scheme="http://lixipeng.me/tags/coredumped/"/>
    
  </entry>
  
  <entry>
    <title>帮我捡一下糖就好</title>
    <link href="http://lixipeng.me/2014-05/pick-up-the-candy-for-me-please/"/>
    <id>http://lixipeng.me/2014-05/pick-up-the-candy-for-me-please/</id>
    <published>2014-05-31T06:46:34.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;暮投石壕村，有吏夜捉人。老翁逾墙走，老妇出门看。&lt;br&gt;吏呼一何怒，妇啼一何苦。听妇前致词，三男邺城戍。&lt;br&gt;一男附书至，二男新战死。存者且偷生，死者长已矣！&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;室中更无人，惟有乳下孙。有孙母未去，出入无完裙。&lt;br&gt;老妪力虽衰，请从吏夜归。急应河阳役，犹得备晨炊。&lt;br&gt;夜久语声绝，如闻泣幽咽。天明登前途，独与老翁别。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;杜甫 《石壕吏》&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没上学的时候我姐就教我背这个，还背《再别康桥》和《木兰辞》，当时我大姐上学每次放假回来，第一件事就是让我背一遍这些，搞得我现在想忘都忘不掉，以至于到现在傲娇的说这些。&lt;br&gt;当时我妈说，第一句最后的那个“老妇出门看”如果改成“老妇出看门”，意思也没怎么变，反而更通顺了。现在想想，我觉得还是“出看门”更好。“出门看”，应该是老妇打开门然后四处张望的样子；但实际上，我想象中的官兵抓壮丁应该是一大队人，然后举着火把，当当当的敲门，这个时候老妇应该是想知道门那里发生了什么事情什么的，所以是去“看门”。&lt;br&gt;后来我问，当时杜甫不也是一个官儿吗？战火纷飞的，人家老两口好心好意的收留你过夜，抓壮丁的来了，你都不出来帮忙说句话，有点说不过去吧？不过等到上课的时候，我也没有提过这个问题，因为人家作者是要“反应‘安史之乱’引起的战争给广大人民的沉重灾难，表达了诗人对劳动人民的深切同情”。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;那个视频我无论如何都不敢看，是真的不敢看。过程可以想象的到，视频就是不敢看。&lt;br&gt;很难想象一个人就那么被打死了。&lt;br&gt;很多人都在声讨周围的人为什么不冲上去帮个忙什么的，可能如果是他们在场，确实会挺身而出，我也不想否认这一点。&lt;br&gt;我记得我大一还是大二的时候，学院里评“十大最人”，我搞到了“最幽默”和“最有正义感”两个。“最幽默”我觉得实至名归，要说逗逼，鹏宝还是很出色的。“最有正义感”，基本大家都得到了一票，而我得到了两票，所以花落我家。在前面做展示的时候，我记得我说：&lt;br&gt;其实大家都是充满了正义感，只是恰巧我有两票而已。我并没有做什么充满正义感的事情，我也觉得，其实正义感并不一定要在大是大非前才能得到体现。平时的生活中也是可以有正义感的。&lt;br&gt;大体是这样子。&lt;br&gt;大三的时候，二主楼频频有绅士出没，有一次我们学院的一个学妹在上自习的时候，发现前面的一个男生（绅士）在偷拍前面的女生还是怎么样的，然后就拿出手机拍了照片，传到了人人网上。结果包括很多女生在内的很多同学对其进行了严厉的指责，质问她为什么不当场制止，后来那个学妹也很委屈。&lt;br&gt;我还翻了半天，找到了当时发的状态：&lt;br&gt;&lt;img src=&quot;/img/0531/1.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;img src=&quot;/img/0531/2.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;很难办的。&lt;br&gt;所以你如果问我，要是我在场，会不会冲上去制止他们？我的答案是，不知道，更可能是不会。&lt;br&gt;有些事情想起来可能真的非常简单，当时如果在场的所有人都冲上去了，那很有可能最后不会发生这种悲剧。有时候你也想，你说为啥在场的人不伸一把手呢，看着一个女人被活活打死，一点反应都没有，你觉得如果是你的话，肯定会奋不顾身的冲上去。我相信在场的所有人都会想着到底要不要帮个忙，尽管最后大家都没有行动，只是带着恐惧围观。我觉得这也很好啊，至少比大家什么都没有想，仍然按地不动，该吃汉堡吃汉堡，该喝可乐喝可乐要好得多。&lt;br&gt;要是只有一个人冲上去了，很显然，他也可能会被打死。&lt;br&gt;每个人都想要冲上去，每个人也都知道如果大家一起冲上去肯定能够避免悲剧发生，每个人也都会怕，如果自己冲上去了，别人没有动怎么办？&lt;br&gt;这是一个囚徒困境，理性人都是会选择坦白从宽的。&lt;br&gt;理性人就是会带着恐惧围观的，当然，人是有限理性的，所以可能真的有人冲上去，那如果这个人真的被打死了，周围的人怎么想呢？幸亏我没上。那以后再遇到这种事情，他连想都不会想了，因为他知道冲上去就会被打死。&lt;br&gt;这是一个演化博弈的过程，选择原地不动是进化稳定策略。&lt;br&gt;如果一个人的一罐糖撒在地上，路过的人可能毫不犹豫停下脚步，帮忙捡一下；如果一个人被另一个绝对不会采取过激行为的人无情的羞辱，你也可能会挺身而出与之争辩；如果只需要你一拳一巴掌就能够控制住场面，可能你也会豪不吝啬。&lt;br&gt;&lt;img src=&quot;/img/0531/3.PNG&quot; alt=&quot;&quot;&gt;&lt;br&gt;你仍然不会犹豫吗？&lt;br&gt;当你用冷冰冰的博弈论去分析这些事情的时候，看起来有些无情是吧。我们还是希望社会上多一些“不理性”的人，去做出一些能够让人感到温暖的事情。&lt;br&gt;我们一直被告知，遇到事情不要自己轻举妄动，要试图报警，让更专业的人来处理，以避免不必要的伤害。然而真的发生了这种事，又都希望所有人轻举妄动，来体现正义感。&lt;br&gt;很难办的。&lt;br&gt;看到有一条评论：如果你带着你的女朋友去吃饭，突然发生了这种事，难道你直接抛下女朋友就冲上去了吗？&lt;br&gt;有些事情看起来其实很简单，但真的就简单的去看待这些事情吗？在场的每一个人，都有家人，都有父母，都承担了各种角色，真的能随随便便就抛弃了吗？万一，出现了意外，那你爸爸妈妈怎么办？你的爱人？你的儿子？颁发一个“见义勇为”称号，能弥补一切吗？能弥补白发人送黑发人的悲伤？能弥补失去爱人的断肠？能弥补失去父亲的凄凉？都不能，当然，这能够弘扬社会主义核心价值观，给予不正之风以沉重的打击，毫无疑问，对于个人来说，代价太大了。对不起，使用了蹩脚的押韵排比句。&lt;br&gt;这是不是自私？是，但这也是一种责任感。&lt;br&gt;这是不是懦弱？是，但这也是一种无奈。&lt;br&gt;况且，自私不对吗？懦弱又怎么了？&lt;br&gt;我妈从很久很久以前就告诉我不要见义勇为，告诉我只要保证自己不做坏事就行了，当时我还呲之以鼻，现在长大了一点，感觉能够体会到她的心情。&lt;br&gt;有些人假定了很多理想的状况，最理想的就是那些见义勇为的人不会受到伤害。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;人是有限理性的动物，同时也是无限感性的动物。很可能平时看起来懦弱的人，在遇到这种事情的时候，脑袋一热，冲了上去；而平时那些全身充满了正义感，比如嘴上，的人，脑袋一热，转身走了。&lt;br&gt;哪有什么有预谋的见义勇为，哪有什么毫不犹豫，都是脑袋一热。&lt;br&gt;这次见义勇为断了一条胳膊，下次再遇到，还会冲上去吗？有人说，我还是会毫不犹豫地冲上去！&lt;br&gt;你知不知道你吃个饭都得你媳妇你妈一口一口喂你？&lt;br&gt;那些家里媳妇生孩子了，父亲重病过世了，仍然坚持给学生上完课，仍然奋斗在生产第一线的人，干嘛呢这是？&lt;br&gt;别人可以觉得这个光荣，唯独你不行。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;如果所有人都不做坏事，那可能就不需要那么多的见义勇为，大家都能相安无事，这也是理想的状况，所以仍然需要有些人放弃自己，挺身而出，对于这些人，我由衷的感到敬佩，因为他做到了我可能做不到的事情，不过仅此而已。&lt;/p&gt;
&lt;p&gt;总会有人在这个时候搬出马丁·尼莫拉的忏悔文：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;当纳粹追杀共产主义者&lt;br&gt;我保持沉默&lt;br&gt;——我不是共产主义者&lt;br&gt;当他们追杀社会民主主义者&lt;br&gt;我保持沉默&lt;br&gt;——我不是社会民主主义者&lt;br&gt;当他们追杀工会成员&lt;br&gt;我没站出来说话&lt;br&gt;——我不是工会成员&lt;br&gt;当他们追杀犹太人&lt;br&gt;我保持沉默&lt;br&gt;——我不是犹太人&lt;br&gt;当他们要追杀我&lt;br&gt;再也没有人为我说话了&lt;/p&gt;
&lt;p&gt;&lt;em&gt;弗里德里希·古斯塔夫·埃米尔·马丁·尼莫拉 反纳粹忏悔文 《起初他们》&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;说的难听一点，今天你站出来，就是为了有人能为你站出来吗？&lt;br&gt;不可否认的是，如果大家互相站出来，那么这个社会可能变得更有凝聚力。&lt;br&gt;但如果我是受害者，如果帮助我会给别人带来很严重的伤害 ，那就不要为我站出来了，你有你的责任，你有你的角色，你有你自己的生活，如果你真的占了出来，我不知道有多感谢，但如果没有，没关系，我可能也会这么做的。&lt;br&gt;不过如果我的糖罐撒了，还是麻烦帮我捡一下吧~ 我们一起吃糖&lt;br&gt;或者肥皂&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;暮投石壕村，有吏夜捉人。老翁逾墙走，老妇出门看。&lt;br&gt;吏呼一何怒，妇啼一何苦。听妇前致词，三男邺城戍。&lt;br&gt;一男附书至，二男新战死。存者且偷生，死者长已矣！&lt;/p&gt;
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
      <category term="招远" scheme="http://lixipeng.me/tags/%E6%8B%9B%E8%BF%9C/"/>
    
  </entry>
  
  <entry>
    <title>硝酸咪康唑散</title>
    <link href="http://lixipeng.me/2014-05/%E7%A1%9D%E9%85%B8%E5%92%AA%E5%BA%B7%E5%94%91%E6%95%A3/"/>
    <id>http://lixipeng.me/2014-05/硝酸咪康唑散/</id>
    <published>2014-05-14T15:55:29.000Z</published>
    <updated>2016-03-06T06:44:29.000Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;这烧烤羊肉串儿吃的我想吐，非常想吐。怎么这么大一股膻味，你是不是真的用羊肉了？说好的猪肉刷羊油呢？无良商家，差评。&lt;br&gt;还是… 猪肉刷羊油才是这个味道… o(╯□╰)o&lt;br&gt;那也刷尼玛太多了吧摔！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;#####下面开始流水账&lt;br&gt;&lt;strong&gt;大数据、博弈论还有应用多元统计分析结课&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;其中呢，大数据还有个大作业，博弈论还有个课程论文。&lt;br&gt;说到大数据的大作业我真是不得不吐槽几句，算了，一句得了：女生有点靠不住啊。咱们默认都用阿里巴巴的那个对吧，咱们组一共有五个队，你自己也在做，突然你说不想用这个，然后搬出助教压我们对吧，不厚道是吧，主要是你自己还不想做，然后还想用别人的毕设交上去。我跟你说一个女生从女神堕落到不是女神都是一瞬间的事你信不信？&lt;br&gt;大数据老师还是很牛逼的，感觉是见过世面的人，感觉必须得这么评价了。你觉得他好像啥都不懂，我跟你说人家学物理的数学功底那是好的一逼。到最后绝对是听不懂了，必须得磊落的承认这一点了&lt;br&gt;应用多元统计分析，老师是好老师，这个就不多说了，直接引用课程论文的致谢部分：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;其实这并不能算一篇严格意义上的论文，尽管我花在这个上面的时间并不少。&lt;br&gt;我非常感谢李娜老师，给我一学期的感动。&lt;br&gt;尽管老师自己说是刚开始在科院讲课，尽管相比老老师，新老师通常会更用心的准备，但李娜老师还是给了我很大的感动。我相信所有的同学们都会这样想。&lt;br&gt;我们上课的人不多，但老师还是备课备的非常充分，上课的时候也非常认真，从来都是一说就说两节课。说实话，这一学期老师讲的东西能听懂的并不是很多，但总是觉得不听特别不好意思… 所以每次都只能眼睛直勾勾的盯着黑板，尽量多听懂一些。&lt;br&gt;然后… 希望老师的宝宝能够健康，我觉得很幸运能跟他一起听了一学期的课，我估计他能记住的都比我要多… 嘻嘻&lt;br&gt;然后感谢小基友&lt;a href=&quot;http://weibo.com/ouchengeng&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;@欧陈_kop&lt;/a&gt;，周二我们两个11节课都在一块，诶… 完全的审美疲劳… &lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;最后老师给回邮件的时候：&lt;br&gt;&lt;img src=&quot;/img/0514/mail.png&quot; alt=&quot;嘻嘻&quot;&gt;&lt;/p&gt;
&lt;p&gt;我想说的是：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;老师你是我导师派过来劝我读博的吗！&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;博弈论博弈论博弈论，感觉这绝对是个坑。就是被耶鲁大学的那个公开课给骗了，感觉完全不同，必须的得这么说了。也不好说老师的坏话是吧，不过这个微信群确实闹的我有点蛋疼，同学们你们赞美老师真的是发自内心的吗？是我的觉悟还不够高？必须得这么解释了，你说是不是这个道理。最后讲的东西和耶鲁大学那个老师讲的差不多，但课程极其枯燥无味，感觉必须得这么评价了。反正不喜欢。&lt;br&gt;最后的课程论文，准备研究一下“人计算”，NetLogo的代码已经写好了，不过感觉需要改一下，到时候会把渣代码po出来，人家这个也是个技术博客好吗！&lt;/p&gt;
&lt;p&gt;&lt;em&gt;不想写了，今天先到这吧… &lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;这烧烤羊肉串儿吃的我想吐，非常想吐。怎么这么大一股膻味，你是不是真的用羊肉了？说好的猪肉刷羊油呢？无良商家，差评。&lt;br&gt;还是… 猪肉刷羊油才是这个味道… o(╯□╰)o&lt;br&gt;那也刷尼玛太多了吧摔！&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="碎碎碎碎念" scheme="http://lixipeng.me/categories/%E7%A2%8E%E7%A2%8E%E7%A2%8E%E7%A2%8E%E5%BF%B5/"/>
    
    
  </entry>
  
</feed>
